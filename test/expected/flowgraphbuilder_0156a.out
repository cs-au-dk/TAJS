fg2: <main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    node 1: function-decl[function CSlider(c,t,n),-] (test/flowgraphbuilder/flowgraph_builder0156a.js:1:1)
    node 2: vardecl['cs1']* (test/flowgraphbuilder/flowgraph_builder0156a.js:13:5)
    ->[block 1]
  block 1:
    node 3: constant["tajs-host-env:string-replace-model.js",v2] (host-environment-sources-loader)
    node 4: constant[true,v3] (host-environment-sources-loader)
    ->[block 2] ~>[block 25]
  block 2:
    node 5: call[TAJS_load,v2,v3,v4] (host-environment-sources-loader)
    ->[block 3] ~>[block 25]
  block 3:
    node 6: call[-,v4,-] (host-environment-sources-loader)
    ->[block 4] ~>[block 25]
  block 4:
    node 7: read-variable['CSlider',v6,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:15)
    node 8: constant["vs_cntr11",v7] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:23)
    node 9: constant["lr",v8] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:36)
    node 10: constant[1.0,v9] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:42)
    ->[block 5] ~>[block 25]
  block 5:
    node 11: construct[-,v6,v7,v8,v9,v5] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:11)
    ->[block 6] ~>[block 25]
  block 6:
    node 12: write-variable[v5,'cs1']* (test/flowgraphbuilder/flowgraph_builder0156a.js:13:5)
    node 13: read-variable['cs1',v11,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:1)
    node 14: read-property[v11,'startSlide',-] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:1)
    node 15: <variable-non-null-undef>['cs1'] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:1)
    node 16: constant["l",v12] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:16)
    node 17: constant["cs1",v13] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:21)
    ->[block 7] ~>[block 25]
  block 7:
    node 18: call[v11,'startSlide',v12,v13,-]* (test/flowgraphbuilder/flowgraph_builder0156a.js:14:1)
    ->[block 8] ~>[block 25]
  block 8:
    node 19: read-variable['cs1',v15,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:15:1)
    node 20: constant[false,v14] (test/flowgraphbuilder/flowgraph_builder0156a.js:15:10)
    node 21: write-property[v15,'as',v14] (test/flowgraphbuilder/flowgraph_builder0156a.js:15:1)
    node 22: <variable-non-null-undef>['cs1']* (test/flowgraphbuilder/flowgraph_builder0156a.js:15:1)
    ->[block 9] ~>[block 25]
  block 9:
    node 23: nop(eventDispatchers: entry) (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 10,block 14] ~>[block 25]
  block 10:
    node 24: event-dispatcher <LOAD>* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 13] ~>[block 11]
  block 11:
    node 25: catch[v17] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    node 26: nop(eventDispatchers: exceptional exit Load) (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 12,block 14]
  block 12:
    node 27: throw[v17]* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
  block 13:
    node 28: nop(eventDispatchers: ordinary exit Load)* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 14] ~>[block 25]
  block 14:
    node 29: nop(eventDispatchers: post Load)* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 10,block 15,block 19] ~>[block 25]
  block 15:
    node 30: event-dispatcher <OTHER>* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 18] ~>[block 16]
  block 16:
    node 31: catch[v18] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    node 32: nop(eventDispatchers: exceptional exit Other) (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 17,block 19]
  block 17:
    node 33: throw[v18]* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
  block 18:
    node 34: nop(eventDispatchers: ordinary exit Other)* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 19] ~>[block 25]
  block 19:
    node 35: nop(eventDispatchers: post Other)* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 15,block 20,block 24] ~>[block 25]
  block 20:
    node 36: event-dispatcher <UNLOAD>* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 23] ~>[block 21]
  block 21:
    node 37: catch[v19] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    node 38: nop(eventDispatchers: exceptional exit Unload) (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 22,block 24]
  block 22:
    node 39: throw[v19]* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
  block 23:
    node 40: nop(eventDispatchers: ordinary exit Unload)* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 24] ~>[block 25]
  block 24:
    node 41: nop(eventDispatchers: post Unload)* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 20,block 27] ~>[block 25]
  block 25:
    node 42: catch[v16] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 9,block 26]
  block 26:
    node 43: throw[v16]* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
  block 27: [exit-ordinary]
    node 44: return[v1] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
  block 28: [exit-exceptional]
    node 45: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
function CSlider(c,t,n)
  block 29: [entry]
    node 46: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:1:1)
    ->[block 30]
  block 30:
    node 47: read-variable['this',v3,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:5)
    node 48: read-variable['t',v5,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:15)
    node 49: constant["lr",v6] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:20)
    node 50: ==[v5,v6,v4] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:15)
    node 51: if[v4](true-block:31,false-block:32) (test/flowgraphbuilder/flowgraph_builder0156a.js:2:14)
    ->[block 31,block 32]
  block 31:
    node 52: constant["left",v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:28)
    ->[block 33]
  block 32:
    node 53: constant["top",v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:37)
    ->[block 33]
  block 33:
    node 54: write-property[v3,'p',v2]* (test/flowgraphbuilder/flowgraph_builder0156a.js:2:5)
    node 55: read-variable['this',v8,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:3:5)
    node 56: function-expr[function(d,o),v7] (test/flowgraphbuilder/flowgraph_builder0156a.js:3:23)
    node 57: write-property[v8,'startSlide',v7]* (test/flowgraphbuilder/flowgraph_builder0156a.js:3:5)
    node 58: read-variable['this',v10,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:7:5)
    node 59: function-expr[function(d),v9] (test/flowgraphbuilder/flowgraph_builder0156a.js:7:18)
    node 60: write-property[v10,'getCP',v9]* (test/flowgraphbuilder/flowgraph_builder0156a.js:7:5)
    ->[block 34]
  block 34: [exit-ordinary]
    node 61: return[v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:1:1)
    ->[]
  block 35: [exit-exceptional]
    node 62: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156a.js:1:1)
    ->[]
function(d,o)
  block 36: [entry]
    node 63: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:3:23)
    ->[block 37]
  block 37:
    node 64: read-variable['this',v4,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:9)
    node 65: read-variable['setInterval',v6,v5] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:23)
    node 66: constant["",v14] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 67: read-variable['o',v15,v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:40)
    node 68: +[v14,v15,v12] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 69: constant[".move('",v13] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:44)
    node 70: +[v12,v13,v10] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 71: read-variable['d',v11,v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:56)
    node 72: +[v10,v11,v8] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 73: constant["')",v9] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:60)
    node 74: +[v8,v9,v7] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 75: constant[10.0,v16] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:66)
    ->[block 38]
  block 38:
    node 76: call[v5,v6,v7,v16,v3] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:23)
    ->[block 39]
  block 39:
    node 77: write-property[v4,'intrvl',v3]* (test/flowgraphbuilder/flowgraph_builder0156a.js:4:9)
    node 78: read-variable['this',v18,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:5:9)
    node 79: read-variable['this',v20,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:5:19)
    node 80: read-property[v20,'getCP',-] (test/flowgraphbuilder/flowgraph_builder0156a.js:5:19)
    ->[block 40]
  block 40:
    node 81: call[v20,'getCP',v17] (test/flowgraphbuilder/flowgraph_builder0156a.js:5:19)
    ->[block 41]
  block 41:
    node 82: write-property[v18,'np',v17]* (test/flowgraphbuilder/flowgraph_builder0156a.js:5:9)
    ->[block 42]
  block 42: [exit-ordinary]
    node 83: return[v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:3:23)
    ->[]
  block 43: [exit-exceptional]
    node 84: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156a.js:3:23)
    ->[]
function(d)
  block 44: [entry]
    node 85: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:7:18)
    ->[block 45]
  block 45:
    node 86: read-variable['eval',v4,v3] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:16)
    node 87: constant["parseInt(this.c.style.",v12] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    node 88: read-variable['this',v14,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:48)
    node 89: read-property[v14,'p',v13] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:48)
    node 90: +[v12,v13,v10] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    node 91: constant[".substring(0,this.c.style.",v11] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:57)
    node 92: +[v10,v11,v8] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    node 93: read-variable['this',v15,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:88)
    node 94: read-property[v15,'p',v9] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:88)
    node 95: +[v8,v9,v6] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    node 96: constant[".length-2))",v7] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:97)
    node 97: +[v6,v7,v5] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    ->[block 46]
  block 46:
    node 98: call[v3,v4,v5,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:16)
    ->[block 47]
  block 47: [exit-ordinary]
    node 99: return[v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:7:18)
    ->[]
  block 48: [exit-exceptional]
    node 100: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156a.js:7:18)
    ->[]

fg2: <main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    node 1: function-decl[function CSlider(c,t,n),-] (test/flowgraphbuilder/flowgraph_builder0156a.js:1:1)
    node 2: vardecl['cs1']* (test/flowgraphbuilder/flowgraph_builder0156a.js:13:5)
    ->[block 1]
  block 1:
    node 3: constant["tajs-host-env:string-replace-model.js",v2] (host-environment-sources-loader)
    node 4: constant[true,v3] (host-environment-sources-loader)
    ->[block 2] ~>[block 25]
  block 2:
    node 5: call[TAJS_load,v2,v3,v4] (host-environment-sources-loader)
    ->[block 3] ~>[block 25]
  block 3:
    node 6: call[-,v4,-] (host-environment-sources-loader)
    ->[block 4] ~>[block 25]
  block 4:
    node 7: read-variable['CSlider',v6,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:15)
    node 8: constant["vs_cntr11",v7] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:23)
    node 9: constant["lr",v8] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:36)
    node 10: constant[1.0,v9] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:42)
    ->[block 5] ~>[block 25]
  block 5:
    node 11: construct[-,v6,v7,v8,v9,v5] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:11)
    ->[block 6] ~>[block 25]
  block 6:
    node 12: write-variable[v5,'cs1']* (test/flowgraphbuilder/flowgraph_builder0156a.js:13:5)
    node 13: read-variable['cs1',v11,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:1)
    node 14: read-property[v11,'startSlide',-] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:1)
    node 15: <variable-non-null-undef>['cs1'] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:1)
    node 16: constant["l",v12] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:16)
    node 17: constant["cs1",v13] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:21)
    ->[block 7] ~>[block 25]
  block 7:
    node 18: call[v11,'startSlide',v12,v13,-]* (test/flowgraphbuilder/flowgraph_builder0156a.js:14:1)
    ->[block 8] ~>[block 25]
  block 8:
    node 19: read-variable['cs1',v15,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:15:1)
    node 20: constant[false,v14] (test/flowgraphbuilder/flowgraph_builder0156a.js:15:10)
    node 21: write-property[v15,'as',v14] (test/flowgraphbuilder/flowgraph_builder0156a.js:15:1)
    node 22: <variable-non-null-undef>['cs1']* (test/flowgraphbuilder/flowgraph_builder0156a.js:15:1)
    ->[block 9] ~>[block 25]
  block 9:
    node 23: nop(eventDispatchers: entry) (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 10,block 14] ~>[block 25]
  block 10:
    node 24: event-dispatcher <LOAD>* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 13] ~>[block 11]
  block 11:
    node 25: catch[v17] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    node 26: nop(eventDispatchers: exceptional exit Load) (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 12,block 14]
  block 12:
    node 27: throw[v17]* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
  block 13:
    node 28: nop(eventDispatchers: ordinary exit Load)* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 14] ~>[block 25]
  block 14:
    node 29: nop(eventDispatchers: post Load)* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 10,block 15,block 19] ~>[block 25]
  block 15:
    node 30: event-dispatcher <OTHER>* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 18] ~>[block 16]
  block 16:
    node 31: catch[v18] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    node 32: nop(eventDispatchers: exceptional exit Other) (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 17,block 19]
  block 17:
    node 33: throw[v18]* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
  block 18:
    node 34: nop(eventDispatchers: ordinary exit Other)* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 19] ~>[block 25]
  block 19:
    node 35: nop(eventDispatchers: post Other)* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 15,block 20,block 24] ~>[block 25]
  block 20:
    node 36: event-dispatcher <UNLOAD>* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 23] ~>[block 21]
  block 21:
    node 37: catch[v19] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    node 38: nop(eventDispatchers: exceptional exit Unload) (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 22,block 24]
  block 22:
    node 39: throw[v19]* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
  block 23:
    node 40: nop(eventDispatchers: ordinary exit Unload)* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 24] ~>[block 25]
  block 24:
    node 41: nop(eventDispatchers: post Unload)* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 20,block 27] ~>[block 25]
  block 25:
    node 42: catch[v16] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 9,block 26]
  block 26:
    node 43: throw[v16]* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
  block 27: [exit-ordinary]
    node 44: return[v1] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
  block 28: [exit-exceptional]
    node 45: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
function CSlider(c,t,n)
  block 29: [entry]
    node 46: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:1:1)
    ->[block 30]
  block 30:
    node 47: read-variable['this',v3,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:5)
    node 48: read-variable['t',v5,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:15)
    node 49: constant["lr",v6] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:20)
    node 50: ==[v5,v6,v4] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:15)
    node 51: if[v4](true-block:31,false-block:32) (test/flowgraphbuilder/flowgraph_builder0156a.js:2:14)
    ->[block 31,block 32]
  block 31:
    node 52: constant["left",v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:28)
    ->[block 33]
  block 32:
    node 53: constant["top",v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:37)
    ->[block 33]
  block 33:
    node 54: write-property[v3,'p',v2]* (test/flowgraphbuilder/flowgraph_builder0156a.js:2:5)
    node 55: read-variable['this',v8,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:3:5)
    node 56: function-expr[function(d,o),v7] (test/flowgraphbuilder/flowgraph_builder0156a.js:3:23)
    node 57: write-property[v8,'startSlide',v7]* (test/flowgraphbuilder/flowgraph_builder0156a.js:3:5)
    node 58: read-variable['this',v10,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:7:5)
    node 59: function-expr[function(d),v9] (test/flowgraphbuilder/flowgraph_builder0156a.js:7:18)
    node 60: write-property[v10,'getCP',v9]* (test/flowgraphbuilder/flowgraph_builder0156a.js:7:5)
    ->[block 34]
  block 34: [exit-ordinary]
    node 61: return[v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:1:1)
    ->[]
  block 35: [exit-exceptional]
    node 62: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156a.js:1:1)
    ->[]
function(d,o)
  block 36: [entry]
    node 63: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:3:23)
    ->[block 37]
  block 37:
    node 64: read-variable['this',v4,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:9)
    node 65: read-variable['setInterval',v6,v5] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:23)
    node 66: constant["",v14] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 67: read-variable['o',v15,v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:40)
    node 68: +[v14,v15,v12] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 69: constant[".move('",v13] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:44)
    node 70: +[v12,v13,v10] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 71: read-variable['d',v11,v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:56)
    node 72: +[v10,v11,v8] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 73: constant["')",v9] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:60)
    node 74: +[v8,v9,v7] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 75: constant[10.0,v16] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:66)
    ->[block 38]
  block 38:
    node 76: call[v5,v6,v7,v16,v3] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:23)
    ->[block 39]
  block 39:
    node 77: write-property[v4,'intrvl',v3]* (test/flowgraphbuilder/flowgraph_builder0156a.js:4:9)
    node 78: read-variable['this',v18,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:5:9)
    node 79: read-variable['this',v20,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:5:19)
    node 80: read-property[v20,'getCP',-] (test/flowgraphbuilder/flowgraph_builder0156a.js:5:19)
    ->[block 40]
  block 40:
    node 81: call[v20,'getCP',v17] (test/flowgraphbuilder/flowgraph_builder0156a.js:5:19)
    ->[block 41]
  block 41:
    node 82: write-property[v18,'np',v17]* (test/flowgraphbuilder/flowgraph_builder0156a.js:5:9)
    ->[block 42]
  block 42: [exit-ordinary]
    node 83: return[v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:3:23)
    ->[]
  block 43: [exit-exceptional]
    node 84: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156a.js:3:23)
    ->[]
function(d)
  block 44: [entry]
    node 85: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:7:18)
    ->[block 45]
  block 45:
    node 86: read-variable['eval',v4,v3] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:16)
    node 87: constant["parseInt(this.c.style.",v12] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    node 88: read-variable['this',v14,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:48)
    node 89: read-property[v14,'p',v13] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:48)
    node 90: +[v12,v13,v10] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    node 91: constant[".substring(0,this.c.style.",v11] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:57)
    node 92: +[v10,v11,v8] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    node 93: read-variable['this',v15,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:88)
    node 94: read-property[v15,'p',v9] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:88)
    node 95: +[v8,v9,v6] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    node 96: constant[".length-2))",v7] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:97)
    node 97: +[v6,v7,v5] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    ->[block 46]
  block 46:
    node 98: call[v3,v4,v5,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:16)
    ->[block 47]
  block 47: [exit-ordinary]
    node 99: return[v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:7:18)
    ->[]
  block 48: [exit-exceptional]
    node 100: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156a.js:7:18)
    ->[]
function()
  block 49: [entry]
    node 101: constant[undefined,v1] (HOST(string-replace-model.js):1:1)
    ->[block 50]
  block 50:
    node 102: read-variable['Object',v4,-] (HOST(string-replace-model.js):1:1)
    node 103: read-property[v4,'defineProperty',-] (HOST(string-replace-model.js):1:1)
    node 104: <variable-non-null-undef>['Object'] (HOST(string-replace-model.js):1:1)
    node 105: read-variable['String',v6,v2] (HOST(string-replace-model.js):1:23)
    node 106: read-property[v6,'prototype',v5] (HOST(string-replace-model.js):1:23)
    node 107: <variable-non-null-undef>['String'] (HOST(string-replace-model.js):1:23)
    node 108: constant["replace",v7] (HOST(string-replace-model.js):1:41)
    node 109: new[v8] (HOST(string-replace-model.js):1:52)
    node 110: constant[true,v9] (HOST(string-replace-model.js):2:15)
    node 111: write-property[v8,'writable',v9] (HOST(string-replace-model.js):2:5)
    node 112: constant[false,v10] (HOST(string-replace-model.js):2:33)
    node 113: write-property[v8,'enumerable',v10] (HOST(string-replace-model.js):2:21)
    node 114: constant[true,v11] (HOST(string-replace-model.js):2:54)
    node 115: write-property[v8,'configurable',v11] (HOST(string-replace-model.js):2:40)
    node 116: function-expr[function replace(searchValue,replaceValue),v12] (HOST(string-replace-model.js):3:12)
    node 117: write-property[v8,'value',v12] (HOST(string-replace-model.js):3:5)
    ->[block 51]
  block 51:
    node 118: call[v4,'defineProperty',v5,v7,v8,-]* (HOST(string-replace-model.js):1:1)
    ->[block 52]
  block 52:
    node 119: read-variable['String',v17,v2] (HOST(string-replace-model.js):69:27)
    node 120: read-property[v17,'prototype',v16] (HOST(string-replace-model.js):69:27)
    node 121: <variable-non-null-undef>['String'] (HOST(string-replace-model.js):69:27)
    node 122: read-property[v16,'replace',v15] (HOST(string-replace-model.js):69:27)
    node 123: <property-non-null-undef>[v17,'prototype'] (HOST(string-replace-model.js):69:27)
    node 124: constant[-1.0,v18] (HOST(string-replace-model.js):69:53)
    ->[block 53]
  block 53:
    node 125: call[TAJS_makeContextSensitive,v15,v18,-]* (HOST(string-replace-model.js):69:1)
    ->[block 54]
  block 54:
    node 126: read-variable['String',v23,v2] (HOST(string-replace-model.js):70:27)
    node 127: read-property[v23,'prototype',v22] (HOST(string-replace-model.js):70:27)
    node 128: <variable-non-null-undef>['String'] (HOST(string-replace-model.js):70:27)
    node 129: read-property[v22,'replace',v21] (HOST(string-replace-model.js):70:27)
    node 130: <property-non-null-undef>[v23,'prototype'] (HOST(string-replace-model.js):70:27)
    node 131: constant[0.0,v24] (HOST(string-replace-model.js):70:53)
    ->[block 55]
  block 55:
    node 132: call[TAJS_makeContextSensitive,v21,v24,-]* (HOST(string-replace-model.js):70:1)
    ->[block 56]
  block 56:
    node 133: read-variable['String',v29,v2] (HOST(string-replace-model.js):71:27)
    node 134: read-property[v29,'prototype',v28] (HOST(string-replace-model.js):71:27)
    node 135: <variable-non-null-undef>['String'] (HOST(string-replace-model.js):71:27)
    node 136: read-property[v28,'replace',v27] (HOST(string-replace-model.js):71:27)
    node 137: <property-non-null-undef>[v29,'prototype'] (HOST(string-replace-model.js):71:27)
    node 138: constant[1.0,v30] (HOST(string-replace-model.js):71:53)
    ->[block 57]
  block 57:
    node 139: call[TAJS_makeContextSensitive,v27,v30,-]* (HOST(string-replace-model.js):71:1)
    ->[block 58]
  block 58: [exit-ordinary]
    node 140: return[v1] (HOST(string-replace-model.js):1:1)
    ->[]
  block 59: [exit-exceptional]
    node 141: exceptional-return (HOST(string-replace-model.js):1:1)
    ->[]
function replace(searchValue,replaceValue)
  block 60: [entry]
    node 142: constant[undefined,v1] (HOST(string-replace-model.js):3:12)
    node 143: vardecl['receiver']* (HOST(string-replace-model.js):8:13)
    node 144: vardecl['string']* (HOST(string-replace-model.js):10:13)
    node 145: vardecl['searchValueIsRegExp']* (HOST(string-replace-model.js):16:13)
    node 146: vardecl['matches']* (HOST(string-replace-model.js):18:13)
    node 147: vardecl['matchThatIsFound']* (HOST(string-replace-model.js):21:17)
    node 148: vardecl['callbackArguments']* (HOST(string-replace-model.js):25:25)
    node 149: vardecl['i']* (HOST(string-replace-model.js):26:30)
    node 150: vardecl['indexMatch']* (HOST(string-replace-model.js):37:17)
    node 151: vardecl['replacementSubstrings']* (HOST(string-replace-model.js):45:13)
    node 152: vardecl['j']* (HOST(string-replace-model.js):47:18)
    node 153: vardecl['matchToUse']* (HOST(string-replace-model.js):48:17)
    node 154: vardecl['startIndex']* (HOST(string-replace-model.js):49:17)
    node 155: vardecl['endIndex']* (HOST(string-replace-model.js):50:17)
    node 156: vardecl['replacementSubstring']* (HOST(string-replace-model.js):51:17)
    node 157: vardecl['replacement']* (HOST(string-replace-model.js):52:17)
    node 158: vardecl['k']* (HOST(string-replace-model.js):59:18)
    node 159: vardecl['prefix']* (HOST(string-replace-model.js):61:17)
    node 160: vardecl['suffix']* (HOST(string-replace-model.js):62:17)
    node 161: vardecl['result']* (HOST(string-replace-model.js):63:17)
    ->[block 61]
  block 61:
    node 162: read-variable['this',v4,-] (HOST(string-replace-model.js):5:13)
    node 163: constant[null,v5] (HOST(string-replace-model.js):5:22)
    node 164: ===[v4,v5,v3] (HOST(string-replace-model.js):5:13)
    ->[block 62]
  block 62:
    node 165: if[v3](true-block:64,false-block:63) (HOST(string-replace-model.js):5:13)
    ->[block 63,block 64]
  block 63:
    node 166: read-variable['this',v6,-] (HOST(string-replace-model.js):5:30)
    node 167: read-variable['undefined',v7,v2] (HOST(string-replace-model.js):5:39)
    node 168: ===[v6,v7,v3] (HOST(string-replace-model.js):5:30)
    node 169: if[v3](true-block:64,false-block:67)* (HOST(string-replace-model.js):5:9)
    ->[block 64,block 67]
  block 64:
    node 170: read-variable['TypeError',v9,-] (HOST(string-replace-model.js):6:23)
    ->[block 65]
  block 65:
    node 171: construct[-,v9,v8] (HOST(string-replace-model.js):6:19)
    ->[block 66]
  block 66:
    node 172: throw[v8]* (HOST(string-replace-model.js):6:13)
    ->[block 67]
  block 67:
    node 173: read-variable['this',v8,-] (HOST(string-replace-model.js):8:24)
    node 174: write-variable[v8,'receiver']* (HOST(string-replace-model.js):8:13)
    node 175: read-variable['receiver',v10,v2] (HOST(string-replace-model.js):10:22)
    node 176: constant["",v11] (HOST(string-replace-model.js):10:33)
    node 177: +[v10,v11,v9] (HOST(string-replace-model.js):10:22)
    node 178: write-variable[v9,'string']* (HOST(string-replace-model.js):10:13)
    node 179: typeof['replaceValue',v13] (HOST(string-replace-model.js):11:13)
    node 180: constant["function",v14] (HOST(string-replace-model.js):11:37)
    node 181: !==[v13,v14,v12] (HOST(string-replace-model.js):11:13)
    node 182: if[v12](true-block:68,false-block:70)* (HOST(string-replace-model.js):11:9)
    ->[block 68,block 70]
  block 68:
    node 183: read-variable['string',v17,v2] (HOST(string-replace-model.js):13:49)
    node 184: read-variable['searchValue',v18,v2] (HOST(string-replace-model.js):13:57)
    node 185: read-variable['replaceValue',v20,v2] (HOST(string-replace-model.js):13:70)
    node 186: constant["",v21] (HOST(string-replace-model.js):13:85)
    node 187: +[v20,v21,v19] (HOST(string-replace-model.js):13:70)
    ->[block 69]
  block 69:
    node 188: call[TAJS_firstOrderStringReplace,v17,v18,v19,v1] (HOST(string-replace-model.js):13:20)
    ->[block 135]
  block 70:
    node 189: read-variable['searchValue',v16,v2] (HOST(string-replace-model.js):16:35)
    node 190: read-variable['RegExp',v17,v2] (HOST(string-replace-model.js):16:58)
    node 191: instanceof[v16,v17,v15] (HOST(string-replace-model.js):16:35)
    node 192: write-variable[v15,'searchValueIsRegExp']* (HOST(string-replace-model.js):16:13)
    ->[block 71]
  block 71:
    node 193: call[TAJS_newArray,v18] (HOST(string-replace-model.js):18:23)
    ->[block 72]
  block 72:
    node 194: write-variable[v18,'matches']* (HOST(string-replace-model.js):18:13)
    node 195: read-variable['searchValueIsRegExp',v21,v2] (HOST(string-replace-model.js):19:13)
    node 196: if[v21](true-block:84,false-block:73)* (HOST(string-replace-model.js):19:9)
    ->[block 73,block 84]
  block 73:
    node 197: read-variable['searchValue',v23,v2] (HOST(string-replace-model.js):35:27)
    node 198: constant["",v24] (HOST(string-replace-model.js):35:41)
    node 199: +[v23,v24,v22] (HOST(string-replace-model.js):35:27)
    node 200: write-variable[v22,'searchValue']* (HOST(string-replace-model.js):35:13)
    ->[block 74]
  block 74:
    node 201: call[TAJS_newArray,v25] (HOST(string-replace-model.js):36:37)
    ->[block 75]
  block 75:
    node 202: write-variable[v25,'callbackArguments']* (HOST(string-replace-model.js):36:17)
    node 203: read-variable['string',v30,-] (HOST(string-replace-model.js):37:30)
    node 204: read-property[v30,'indexOf',-] (HOST(string-replace-model.js):37:30)
    node 205: <variable-non-null-undef>['string'] (HOST(string-replace-model.js):37:30)
    node 206: read-variable['searchValue',v31,v2] (HOST(string-replace-model.js):37:45)
    ->[block 76]
  block 76:
    node 207: call[v30,'indexOf',v31,v28] (HOST(string-replace-model.js):37:30)
    ->[block 77]
  block 77:
    node 208: write-variable[v28,'indexMatch']* (HOST(string-replace-model.js):37:17)
    node 209: read-variable['indexMatch',v33,v2] (HOST(string-replace-model.js):38:17)
    node 210: constant[-1.0,v34] (HOST(string-replace-model.js):38:32)
    node 211: !==[v33,v34,v32] (HOST(string-replace-model.js):38:17)
    node 212: if[v32](true-block:78,false-block:109)* (HOST(string-replace-model.js):38:13)
    ->[block 78,block 109]
  block 78:
    node 213: read-variable['callbackArguments',v36,v2] (HOST(string-replace-model.js):39:17)
    node 214: constant[0.0,v37] (HOST(string-replace-model.js):39:35)
    node 215: read-variable['searchValue',v35,v2] (HOST(string-replace-model.js):39:40)
    node 216: write-property[v36,v37,v35] (HOST(string-replace-model.js):39:17)
    node 217: <variable-non-null-undef>['callbackArguments']* (HOST(string-replace-model.js):39:17)
    node 218: read-variable['callbackArguments',v39,-] (HOST(string-replace-model.js):40:17)
    node 219: read-property[v39,'push',-] (HOST(string-replace-model.js):40:17)
    node 220: <variable-non-null-undef>['callbackArguments'] (HOST(string-replace-model.js):40:17)
    node 221: read-variable['indexMatch',v40,v2] (HOST(string-replace-model.js):40:40)
    ->[block 79]
  block 79:
    node 222: call[v39,'push',v40,-]* (HOST(string-replace-model.js):40:17)
    ->[block 80]
  block 80:
    node 223: read-variable['callbackArguments',v42,-] (HOST(string-replace-model.js):41:17)
    node 224: read-property[v42,'push',-] (HOST(string-replace-model.js):41:17)
    node 225: <variable-non-null-undef>['callbackArguments'] (HOST(string-replace-model.js):41:17)
    node 226: read-variable['string',v43,v2] (HOST(string-replace-model.js):41:40)
    ->[block 81]
  block 81:
    node 227: call[v42,'push',v43,-]* (HOST(string-replace-model.js):41:17)
    ->[block 82]
  block 82:
    node 228: read-variable['matches',v45,-] (HOST(string-replace-model.js):42:17)
    node 229: read-property[v45,'push',-] (HOST(string-replace-model.js):42:17)
    node 230: <variable-non-null-undef>['matches'] (HOST(string-replace-model.js):42:17)
    node 231: read-variable['callbackArguments',v46,v2] (HOST(string-replace-model.js):42:30)
    ->[block 83]
  block 83:
    node 232: call[v45,'push',v46,-]* (HOST(string-replace-model.js):42:17)
    ->[block 109]
  block 84:
    node 233: read-variable['searchValue',v28,-] (HOST(string-replace-model.js):23:36)
    node 234: read-property[v28,'exec',-] (HOST(string-replace-model.js):23:36)
    node 235: <variable-non-null-undef>['searchValue'] (HOST(string-replace-model.js):23:36)
    node 236: read-variable['string',v29,v2] (HOST(string-replace-model.js):23:53)
    ->[block 85] ~>[block 107]
  block 85:
    node 237: call[v28,'exec',v29,v26] (HOST(string-replace-model.js):23:36)
    ->[block 86] ~>[block 107]
  block 86:
    node 238: write-variable[v26,'matchThatIsFound']* (HOST(string-replace-model.js):23:17)
    node 239: read-variable['matchThatIsFound',v31,v2] (HOST(string-replace-model.js):24:21)
    node 240: constant[null,v32] (HOST(string-replace-model.js):24:42)
    node 241: !==[v31,v32,v30] (HOST(string-replace-model.js):24:21)
    node 242: if[v30](true-block:87,false-block:102)* (HOST(string-replace-model.js):24:17)
    ->[block 87,block 102] ~>[block 107]
  block 87:
    node 243: call[TAJS_newArray,v33] (HOST(string-replace-model.js):25:45)
    ->[block 88] ~>[block 107]
  block 88:
    node 244: write-variable[v33,'callbackArguments']* (HOST(string-replace-model.js):25:25)
    ->[block 89] ~>[block 107]
  block 89:
    node 245: constant[0.0,v36] (HOST(string-replace-model.js):26:34)
    node 246: write-variable[v36,'i']* (HOST(string-replace-model.js):26:30)
    ->[block 90] ~>[block 107]
  block 90:
    node 247: read-variable['i',v38,v2] (HOST(string-replace-model.js):26:37)
    node 248: read-variable['matchThatIsFound',v40,v2] (HOST(string-replace-model.js):26:41)
    node 249: read-property[v40,'length',v39] (HOST(string-replace-model.js):26:41)
    node 250: <variable-non-null-undef>['matchThatIsFound'] (HOST(string-replace-model.js):26:41)
    node 251: <[v38,v39,v37] (HOST(string-replace-model.js):26:37)
    node 252: begin-loop[v37] (HOST(string-replace-model.js):26:71)
    ->[block 91] ~>[block 94]
  block 91:
    node 253: if[v37](true-block:92,false-block:95)* (HOST(string-replace-model.js):26:37)
    ->[block 92,block 95] ~>[block 94]
  block 92:
    node 254: read-variable['callbackArguments',v42,v2] (HOST(string-replace-model.js):27:25)
    node 255: read-variable['i',v43,v2] (HOST(string-replace-model.js):27:43)
    node 256: read-variable['matchThatIsFound',v44,v2] (HOST(string-replace-model.js):27:48)
    node 257: read-variable['i',v45,v2] (HOST(string-replace-model.js):27:65)
    node 258: read-property[v44,v45,v41] (HOST(string-replace-model.js):27:48)
    node 259: <variable-non-null-undef>['matchThatIsFound'] (HOST(string-replace-model.js):27:48)
    node 260: write-property[v42,v43,v41] (HOST(string-replace-model.js):27:25)
    node 261: <variable-non-null-undef>['callbackArguments']* (HOST(string-replace-model.js):27:25)
    ->[block 93] ~>[block 94]
  block 93:
    node 262: read-variable['i',v46,v2] (HOST(string-replace-model.js):26:66)
    node 263: +[v46,v47] (HOST(string-replace-model.js):26:66)
    node 264: constant[1.0,v48] (HOST(string-replace-model.js):26:66)
    node 265: +[v47,v48,v49] (HOST(string-replace-model.js):26:66)
    node 266: write-variable[v49,'i']* (HOST(string-replace-model.js):26:66)
    ->[block 90] ~>[block 94]
  block 94:
    node 267: end-loop[v37]* (HOST(string-replace-model.js):26:37)
    ->[block 107]
  block 95:
    node 268: end-loop[v37]* (HOST(string-replace-model.js):26:37)
    ->[block 96] ~>[block 107]
  block 96:
    node 269: read-variable['callbackArguments',v51,-] (HOST(string-replace-model.js):29:21)
    node 270: read-property[v51,'push',-] (HOST(string-replace-model.js):29:21)
    node 271: <variable-non-null-undef>['callbackArguments'] (HOST(string-replace-model.js):29:21)
    node 272: read-variable['matchThatIsFound',v53,v2] (HOST(string-replace-model.js):29:44)
    node 273: read-property[v53,'index',v52] (HOST(string-replace-model.js):29:44)
    node 274: <variable-non-null-undef>['matchThatIsFound'] (HOST(string-replace-model.js):29:44)
    ->[block 97] ~>[block 107]
  block 97:
    node 275: call[v51,'push',v52,-]* (HOST(string-replace-model.js):29:21)
    ->[block 98] ~>[block 107]
  block 98:
    node 276: read-variable['callbackArguments',v55,-] (HOST(string-replace-model.js):30:21)
    node 277: read-property[v55,'push',-] (HOST(string-replace-model.js):30:21)
    node 278: <variable-non-null-undef>['callbackArguments'] (HOST(string-replace-model.js):30:21)
    node 279: read-variable['matchThatIsFound',v57,v2] (HOST(string-replace-model.js):30:44)
    node 280: read-property[v57,'input',v56] (HOST(string-replace-model.js):30:44)
    node 281: <variable-non-null-undef>['matchThatIsFound'] (HOST(string-replace-model.js):30:44)
    ->[block 99] ~>[block 107]
  block 99:
    node 282: call[v55,'push',v56,-]* (HOST(string-replace-model.js):30:21)
    ->[block 100] ~>[block 107]
  block 100:
    node 283: read-variable['matches',v59,-] (HOST(string-replace-model.js):31:21)
    node 284: read-property[v59,'push',-] (HOST(string-replace-model.js):31:21)
    node 285: <variable-non-null-undef>['matches'] (HOST(string-replace-model.js):31:21)
    node 286: read-variable['callbackArguments',v60,v2] (HOST(string-replace-model.js):31:34)
    ->[block 101] ~>[block 107]
  block 101:
    node 287: call[v59,'push',v60,-]* (HOST(string-replace-model.js):31:21)
    ->[block 102] ~>[block 107]
  block 102:
    node 288: read-variable['matchThatIsFound',v23,v2] (HOST(string-replace-model.js):33:22)
    node 289: constant[null,v24] (HOST(string-replace-model.js):33:43)
    node 290: !==[v23,v24,v22] (HOST(string-replace-model.js):33:22)
    ->[block 103] ~>[block 107]
  block 103:
    node 291: if[v22](true-block:104,false-block:105) (HOST(string-replace-model.js):33:22)
    ->[block 104,block 105] ~>[block 107]
  block 104:
    node 292: read-variable['searchValue',v25,v2] (HOST(string-replace-model.js):33:51)
    node 293: read-property[v25,'global',v22] (HOST(string-replace-model.js):33:51)
    node 294: <variable-non-null-undef>['searchValue'] (HOST(string-replace-model.js):33:51)
    ->[block 105] ~>[block 107]
  block 105:
    node 295: begin-loop[v22] (HOST(string-replace-model.js):22:16)
    ->[block 106] ~>[block 107]
  block 106:
    node 296: if[v22](true-block:84,false-block:108)* (HOST(string-replace-model.js):33:22)
    ->[block 84,block 108] ~>[block 107]
  block 107:
    node 297: end-loop[v22]* (HOST(string-replace-model.js):33:22)
    ->[block 136]
  block 108:
    node 298: end-loop[v22]* (HOST(string-replace-model.js):33:22)
    ->[block 109]
  block 109:
    node 299: call[TAJS_newArray,v22] (HOST(string-replace-model.js):45:37)
    ->[block 110]
  block 110:
    node 300: write-variable[v22,'replacementSubstrings']* (HOST(string-replace-model.js):45:13)
    ->[block 111]
  block 111:
    node 301: constant[0.0,v25] (HOST(string-replace-model.js):47:22)
    node 302: write-variable[v25,'j']* (HOST(string-replace-model.js):47:18)
    ->[block 112]
  block 112:
    node 303: read-variable['j',v27,v2] (HOST(string-replace-model.js):47:25)
    node 304: read-variable['matches',v29,v2] (HOST(string-replace-model.js):47:29)
    node 305: read-property[v29,'length',v28] (HOST(string-replace-model.js):47:29)
    node 306: <variable-non-null-undef>['matches'] (HOST(string-replace-model.js):47:29)
    node 307: <[v27,v28,v26] (HOST(string-replace-model.js):47:25)
    node 308: begin-loop[v26] (HOST(string-replace-model.js):47:50)
    ->[block 113] ~>[block 121]
  block 113:
    node 309: if[v26](true-block:114,false-block:122)* (HOST(string-replace-model.js):47:25)
    ->[block 114,block 122] ~>[block 121]
  block 114:
    node 310: read-variable['matches',v31,v2] (HOST(string-replace-model.js):48:30)
    node 311: read-variable['j',v32,v2] (HOST(string-replace-model.js):48:38)
    node 312: read-property[v31,v32,v30] (HOST(string-replace-model.js):48:30)
    node 313: <variable-non-null-undef>['matches'] (HOST(string-replace-model.js):48:30)
    node 314: write-variable[v30,'matchToUse']* (HOST(string-replace-model.js):48:17)
    node 315: read-variable['matchToUse',v34,v2] (HOST(string-replace-model.js):49:30)
    node 316: read-variable['matchToUse',v38,v2] (HOST(string-replace-model.js):49:41)
    node 317: read-property[v38,'length',v36] (HOST(string-replace-model.js):49:41)
    node 318: <variable-non-null-undef>['matchToUse'] (HOST(string-replace-model.js):49:41)
    node 319: constant[2.0,v37] (HOST(string-replace-model.js):49:61)
    node 320: -[v36,v37,v35] (HOST(string-replace-model.js):49:41)
    node 321: read-property[v34,v35,v33] (HOST(string-replace-model.js):49:30)
    node 322: <variable-non-null-undef>['matchToUse'] (HOST(string-replace-model.js):49:30)
    node 323: write-variable[v33,'startIndex']* (HOST(string-replace-model.js):49:17)
    node 324: read-variable['startIndex',v40,v2] (HOST(string-replace-model.js):50:28)
    node 325: read-variable['matchToUse',v43,v2] (HOST(string-replace-model.js):50:41)
    node 326: constant[0.0,v44] (HOST(string-replace-model.js):50:52)
    node 327: read-property[v43,v44,v42] (HOST(string-replace-model.js):50:41)
    node 328: <variable-non-null-undef>['matchToUse'] (HOST(string-replace-model.js):50:41)
    node 329: read-property[v42,'length',v41] (HOST(string-replace-model.js):50:41)
    node 330: <property-non-null-undef>[v43,v44] (HOST(string-replace-model.js):50:41)
    node 331: +[v40,v41,v39] (HOST(string-replace-model.js):50:28)
    node 332: write-variable[v39,'endIndex']* (HOST(string-replace-model.js):50:17)
    node 333: read-variable['replaceValue',v49,-] (HOST(string-replace-model.js):51:40)
    node 334: read-property[v49,'apply',-] (HOST(string-replace-model.js):51:40)
    node 335: <variable-non-null-undef>['replaceValue'] (HOST(string-replace-model.js):51:40)
    node 336: read-variable['undefined',v50,v2] (HOST(string-replace-model.js):51:59)
    node 337: read-variable['matchToUse',v51,v2] (HOST(string-replace-model.js):51:70)
    ->[block 115] ~>[block 121]
  block 115:
    node 338: call[v49,'apply',v50,v51,v46] (HOST(string-replace-model.js):51:40)
    ->[block 116] ~>[block 121]
  block 116:
    node 339: constant["",v47] (HOST(string-replace-model.js):51:84)
    node 340: +[v46,v47,v45] (HOST(string-replace-model.js):51:40)
    node 341: write-variable[v45,'replacementSubstring']* (HOST(string-replace-model.js):51:17)
    ->[block 117] ~>[block 121]
  block 117:
    node 342: call[TAJS_newObject,v52] (HOST(string-replace-model.js):52:31)
    ->[block 118] ~>[block 121]
  block 118:
    node 343: write-variable[v52,'replacement']* (HOST(string-replace-model.js):52:17)
    node 344: read-variable['replacement',v56,v2] (HOST(string-replace-model.js):53:13)
    node 345: read-variable['startIndex',v55,v2] (HOST(string-replace-model.js):53:38)
    node 346: write-property[v56,'startIndex',v55] (HOST(string-replace-model.js):53:13)
    node 347: <variable-non-null-undef>['replacement']* (HOST(string-replace-model.js):53:13)
    node 348: read-variable['replacement',v58,v2] (HOST(string-replace-model.js):54:13)
    node 349: read-variable['replacementSubstring',v57,v2] (HOST(string-replace-model.js):54:37)
    node 350: write-property[v58,'substring',v57] (HOST(string-replace-model.js):54:13)
    node 351: <variable-non-null-undef>['replacement']* (HOST(string-replace-model.js):54:13)
    node 352: read-variable['replacement',v60,v2] (HOST(string-replace-model.js):55:13)
    node 353: read-variable['endIndex',v59,v2] (HOST(string-replace-model.js):55:36)
    node 354: write-property[v60,'endIndex',v59] (HOST(string-replace-model.js):55:13)
    node 355: <variable-non-null-undef>['replacement']* (HOST(string-replace-model.js):55:13)
    node 356: read-variable['replacementSubstrings',v62,-] (HOST(string-replace-model.js):56:13)
    node 357: read-property[v62,'unshift',-] (HOST(string-replace-model.js):56:13)
    node 358: <variable-non-null-undef>['replacementSubstrings'] (HOST(string-replace-model.js):56:13)
    node 359: read-variable['replacement',v63,v2] (HOST(string-replace-model.js):56:43)
    ->[block 119] ~>[block 121]
  block 119:
    node 360: call[v62,'unshift',v63,-]* (HOST(string-replace-model.js):56:13)
    ->[block 120] ~>[block 121]
  block 120:
    node 361: read-variable['j',v64,v2] (HOST(string-replace-model.js):47:45)
    node 362: +[v64,v65] (HOST(string-replace-model.js):47:45)
    node 363: constant[1.0,v66] (HOST(string-replace-model.js):47:45)
    node 364: +[v65,v66,v67] (HOST(string-replace-model.js):47:45)
    node 365: write-variable[v67,'j']* (HOST(string-replace-model.js):47:45)
    ->[block 112] ~>[block 121]
  block 121:
    node 366: end-loop[v26]* (HOST(string-replace-model.js):47:25)
    ->[block 136]
  block 122:
    node 367: end-loop[v26]* (HOST(string-replace-model.js):47:25)
    ->[block 123]
  block 123:
    node 368: constant[0.0,v68] (HOST(string-replace-model.js):59:22)
    node 369: write-variable[v68,'k']* (HOST(string-replace-model.js):59:18)
    ->[block 124]
  block 124:
    node 370: read-variable['k',v70,v2] (HOST(string-replace-model.js):59:25)
    node 371: read-variable['replacementSubstrings',v72,v2] (HOST(string-replace-model.js):59:29)
    node 372: read-property[v72,'length',v71] (HOST(string-replace-model.js):59:29)
    node 373: <variable-non-null-undef>['replacementSubstrings'] (HOST(string-replace-model.js):59:29)
    node 374: <[v70,v71,v69] (HOST(string-replace-model.js):59:25)
    node 375: begin-loop[v69] (HOST(string-replace-model.js):59:64)
    ->[block 125] ~>[block 132]
  block 125:
    node 376: if[v69](true-block:126,false-block:133)* (HOST(string-replace-model.js):59:25)
    ->[block 126,block 133] ~>[block 132]
  block 126:
    node 377: read-variable['replacementSubstrings',v74,v2] (HOST(string-replace-model.js):60:31)
    node 378: read-variable['k',v75,v2] (HOST(string-replace-model.js):60:53)
    node 379: read-property[v74,v75,v73] (HOST(string-replace-model.js):60:31)
    node 380: <variable-non-null-undef>['replacementSubstrings'] (HOST(string-replace-model.js):60:31)
    node 381: write-variable[v73,'replacement']* (HOST(string-replace-model.js):60:17)
    node 382: read-variable['string',v78,-] (HOST(string-replace-model.js):61:26)
    node 383: read-property[v78,'substring',-] (HOST(string-replace-model.js):61:26)
    node 384: <variable-non-null-undef>['string'] (HOST(string-replace-model.js):61:26)
    node 385: constant[0.0,v79] (HOST(string-replace-model.js):61:43)
    node 386: read-variable['replacement',v81,v2] (HOST(string-replace-model.js):61:46)
    node 387: read-property[v81,'startIndex',v80] (HOST(string-replace-model.js):61:46)
    node 388: <variable-non-null-undef>['replacement'] (HOST(string-replace-model.js):61:46)
    ->[block 127] ~>[block 132]
  block 127:
    node 389: call[v78,'substring',v79,v80,v76] (HOST(string-replace-model.js):61:26)
    ->[block 128] ~>[block 132]
  block 128:
    node 390: write-variable[v76,'prefix']* (HOST(string-replace-model.js):61:17)
    node 391: read-variable['string',v84,-] (HOST(string-replace-model.js):62:26)
    node 392: read-property[v84,'substring',-] (HOST(string-replace-model.js):62:26)
    node 393: <variable-non-null-undef>['string'] (HOST(string-replace-model.js):62:26)
    node 394: read-variable['replacement',v86,v2] (HOST(string-replace-model.js):62:43)
    node 395: read-property[v86,'endIndex',v85] (HOST(string-replace-model.js):62:43)
    node 396: <variable-non-null-undef>['replacement'] (HOST(string-replace-model.js):62:43)
    ->[block 129] ~>[block 132]
  block 129:
    node 397: call[v84,'substring',v85,v82] (HOST(string-replace-model.js):62:26)
    ->[block 130] ~>[block 132]
  block 130:
    node 398: write-variable[v82,'suffix']* (HOST(string-replace-model.js):62:17)
    node 399: read-variable['prefix',v90,v2] (HOST(string-replace-model.js):63:26)
    node 400: read-variable['replacement',v92,v2] (HOST(string-replace-model.js):63:35)
    node 401: read-property[v92,'substring',v91] (HOST(string-replace-model.js):63:35)
    node 402: <variable-non-null-undef>['replacement'] (HOST(string-replace-model.js):63:35)
    node 403: +[v90,v91,v88] (HOST(string-replace-model.js):63:26)
    node 404: read-variable['suffix',v89,v2] (HOST(string-replace-model.js):63:59)
    node 405: +[v88,v89,v87] (HOST(string-replace-model.js):63:26)
    node 406: write-variable[v87,'result']* (HOST(string-replace-model.js):63:17)
    node 407: read-variable['result',v93,v2] (HOST(string-replace-model.js):64:22)
    node 408: write-variable[v93,'string']* (HOST(string-replace-model.js):64:13)
    ->[block 131] ~>[block 132]
  block 131:
    node 409: read-variable['k',v94,v2] (HOST(string-replace-model.js):59:59)
    node 410: +[v94,v95] (HOST(string-replace-model.js):59:59)
    node 411: constant[1.0,v96] (HOST(string-replace-model.js):59:59)
    node 412: +[v95,v96,v97] (HOST(string-replace-model.js):59:59)
    node 413: write-variable[v97,'k']* (HOST(string-replace-model.js):59:59)
    ->[block 124] ~>[block 132]
  block 132:
    node 414: end-loop[v69]* (HOST(string-replace-model.js):59:25)
    ->[block 136]
  block 133:
    node 415: end-loop[v69]* (HOST(string-replace-model.js):59:25)
    ->[block 134]
  block 134:
    node 416: read-variable['string',v1,v2]* (HOST(string-replace-model.js):66:16)
    ->[block 135]
  block 135: [exit-ordinary]
    node 417: return[v1] (HOST(string-replace-model.js):3:12)
    ->[]
  block 136: [exit-exceptional]
    node 418: exceptional-return (HOST(string-replace-model.js):3:12)
    ->[]

fg2: <main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    node 1: function-decl[function CSlider(c,t,n),-] (test/flowgraphbuilder/flowgraph_builder0156a.js:1:1)
    node 2: vardecl['cs1']* (test/flowgraphbuilder/flowgraph_builder0156a.js:13:5)
    ->[block 1]
  block 1:
    node 3: constant["tajs-host-env:string-replace-model.js",v2] (host-environment-sources-loader)
    node 4: constant[true,v3] (host-environment-sources-loader)
    ->[block 2] ~>[block 25]
  block 2:
    node 5: call[TAJS_load,v2,v3,v4] (host-environment-sources-loader)
    ->[block 3] ~>[block 25]
  block 3:
    node 6: call[-,v4,-] (host-environment-sources-loader)
    ->[block 4] ~>[block 25]
  block 4:
    node 7: read-variable['CSlider',v6,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:15)
    node 8: constant["vs_cntr11",v7] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:23)
    node 9: constant["lr",v8] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:36)
    node 10: constant[1.0,v9] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:42)
    ->[block 5] ~>[block 25]
  block 5:
    node 11: construct[-,v6,v7,v8,v9,v5] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:11)
    ->[block 6] ~>[block 25]
  block 6:
    node 12: write-variable[v5,'cs1']* (test/flowgraphbuilder/flowgraph_builder0156a.js:13:5)
    node 13: read-variable['cs1',v11,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:1)
    node 14: read-property[v11,'startSlide',-] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:1)
    node 15: <variable-non-null-undef>['cs1'] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:1)
    node 16: constant["l",v12] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:16)
    node 17: constant["cs1",v13] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:21)
    ->[block 7] ~>[block 25]
  block 7:
    node 18: call[v11,'startSlide',v12,v13,-]* (test/flowgraphbuilder/flowgraph_builder0156a.js:14:1)
    ->[block 8] ~>[block 25]
  block 8:
    node 19: read-variable['cs1',v15,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:15:1)
    node 20: constant[false,v14] (test/flowgraphbuilder/flowgraph_builder0156a.js:15:10)
    node 21: write-property[v15,'as',v14] (test/flowgraphbuilder/flowgraph_builder0156a.js:15:1)
    node 22: <variable-non-null-undef>['cs1']* (test/flowgraphbuilder/flowgraph_builder0156a.js:15:1)
    ->[block 9] ~>[block 25]
  block 9:
    node 23: nop(eventDispatchers: entry) (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 10,block 14] ~>[block 25]
  block 10:
    node 24: event-dispatcher <LOAD>* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 13] ~>[block 11]
  block 11:
    node 25: catch[v17] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    node 26: nop(eventDispatchers: exceptional exit Load) (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 12,block 14]
  block 12:
    node 27: throw[v17]* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
  block 13:
    node 28: nop(eventDispatchers: ordinary exit Load)* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 14] ~>[block 25]
  block 14:
    node 29: nop(eventDispatchers: post Load)* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 10,block 15,block 19] ~>[block 25]
  block 15:
    node 30: event-dispatcher <OTHER>* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 18] ~>[block 16]
  block 16:
    node 31: catch[v18] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    node 32: nop(eventDispatchers: exceptional exit Other) (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 17,block 19]
  block 17:
    node 33: throw[v18]* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
  block 18:
    node 34: nop(eventDispatchers: ordinary exit Other)* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 19] ~>[block 25]
  block 19:
    node 35: nop(eventDispatchers: post Other)* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 15,block 20,block 24] ~>[block 25]
  block 20:
    node 36: event-dispatcher <UNLOAD>* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 23] ~>[block 21]
  block 21:
    node 37: catch[v19] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    node 38: nop(eventDispatchers: exceptional exit Unload) (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 22,block 24]
  block 22:
    node 39: throw[v19]* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
  block 23:
    node 40: nop(eventDispatchers: ordinary exit Unload)* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 24] ~>[block 25]
  block 24:
    node 41: nop(eventDispatchers: post Unload)* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 20,block 27] ~>[block 25]
  block 25:
    node 42: catch[v16] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 9,block 26]
  block 26:
    node 43: throw[v16]* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
  block 27: [exit-ordinary]
    node 44: return[v1] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
  block 28: [exit-exceptional]
    node 45: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
function CSlider(c,t,n)
  block 29: [entry]
    node 46: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:1:1)
    ->[block 30]
  block 30:
    node 47: read-variable['this',v3,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:5)
    node 48: read-variable['t',v5,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:15)
    node 49: constant["lr",v6] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:20)
    node 50: ==[v5,v6,v4] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:15)
    node 51: if[v4](true-block:31,false-block:32) (test/flowgraphbuilder/flowgraph_builder0156a.js:2:14)
    ->[block 31,block 32]
  block 31:
    node 52: constant["left",v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:28)
    ->[block 33]
  block 32:
    node 53: constant["top",v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:37)
    ->[block 33]
  block 33:
    node 54: write-property[v3,'p',v2]* (test/flowgraphbuilder/flowgraph_builder0156a.js:2:5)
    node 55: read-variable['this',v8,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:3:5)
    node 56: function-expr[function(d,o),v7] (test/flowgraphbuilder/flowgraph_builder0156a.js:3:23)
    node 57: write-property[v8,'startSlide',v7]* (test/flowgraphbuilder/flowgraph_builder0156a.js:3:5)
    node 58: read-variable['this',v10,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:7:5)
    node 59: function-expr[function(d),v9] (test/flowgraphbuilder/flowgraph_builder0156a.js:7:18)
    node 60: write-property[v10,'getCP',v9]* (test/flowgraphbuilder/flowgraph_builder0156a.js:7:5)
    ->[block 34]
  block 34: [exit-ordinary]
    node 61: return[v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:1:1)
    ->[]
  block 35: [exit-exceptional]
    node 62: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156a.js:1:1)
    ->[]
function(d,o)
  block 36: [entry]
    node 63: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:3:23)
    ->[block 37]
  block 37:
    node 64: read-variable['this',v4,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:9)
    node 65: read-variable['setInterval',v6,v5] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:23)
    node 66: constant["",v14] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 67: read-variable['o',v15,v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:40)
    node 68: +[v14,v15,v12] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 69: constant[".move('",v13] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:44)
    node 70: +[v12,v13,v10] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 71: read-variable['d',v11,v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:56)
    node 72: +[v10,v11,v8] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 73: constant["')",v9] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:60)
    node 74: +[v8,v9,v7] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 75: constant[10.0,v16] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:66)
    ->[block 38]
  block 38:
    node 76: call[v5,v6,v7,v16,v3] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:23)
    ->[block 39]
  block 39:
    node 77: write-property[v4,'intrvl',v3]* (test/flowgraphbuilder/flowgraph_builder0156a.js:4:9)
    node 78: read-variable['this',v18,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:5:9)
    node 79: read-variable['this',v20,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:5:19)
    node 80: read-property[v20,'getCP',-] (test/flowgraphbuilder/flowgraph_builder0156a.js:5:19)
    ->[block 40]
  block 40:
    node 81: call[v20,'getCP',v17] (test/flowgraphbuilder/flowgraph_builder0156a.js:5:19)
    ->[block 41]
  block 41:
    node 82: write-property[v18,'np',v17]* (test/flowgraphbuilder/flowgraph_builder0156a.js:5:9)
    ->[block 42]
  block 42: [exit-ordinary]
    node 83: return[v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:3:23)
    ->[]
  block 43: [exit-exceptional]
    node 84: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156a.js:3:23)
    ->[]
function(d)
  block 44: [entry]
    node 85: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:7:18)
    ->[block 45]
  block 45:
    node 86: read-variable['eval',v4,v3] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:16)
    node 87: constant["parseInt(this.c.style.",v12] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    node 88: read-variable['this',v14,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:48)
    node 89: read-property[v14,'p',v13] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:48)
    node 90: +[v12,v13,v10] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    node 91: constant[".substring(0,this.c.style.",v11] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:57)
    node 92: +[v10,v11,v8] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    node 93: read-variable['this',v15,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:88)
    node 94: read-property[v15,'p',v9] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:88)
    node 95: +[v8,v9,v6] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    node 96: constant[".length-2))",v7] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:97)
    node 97: +[v6,v7,v5] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    ->[block 46]
  block 46:
    node 98: call[v3,v4,v5,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:16)
    ->[block 47]
  block 47: [exit-ordinary]
    node 99: return[v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:7:18)
    ->[]
  block 48: [exit-exceptional]
    node 100: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156a.js:7:18)
    ->[]
function()
  block 137: [entry]
    node 419: constant[undefined,v1] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1)
    ->[block 138]
  block 138:
    node 420: read-variable['cs1',v4,-] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1)
    node 421: read-property[v4,'move',-] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1)
    node 422: <variable-non-null-undef>['cs1'] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1)
    node 423: constant["l",v5] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:10)
    ->[block 139]
  block 139:
    node 424: call[v4,'move',v5,-]* (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1)
    ->[block 140]
  block 140: [exit-ordinary]
    node 425: return[v1] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1)
    ->[]
  block 141: [exit-exceptional]
    node 426: exceptional-return (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1)
    ->[]

fg2: <main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    node 1: function-decl[function CSlider(c,t,n),-] (test/flowgraphbuilder/flowgraph_builder0156a.js:1:1)
    node 2: vardecl['cs1']* (test/flowgraphbuilder/flowgraph_builder0156a.js:13:5)
    ->[block 1]
  block 1:
    node 3: constant["tajs-host-env:string-replace-model.js",v2] (host-environment-sources-loader)
    node 4: constant[true,v3] (host-environment-sources-loader)
    ->[block 2] ~>[block 25]
  block 2:
    node 5: call[TAJS_load,v2,v3,v4] (host-environment-sources-loader)
    ->[block 3] ~>[block 25]
  block 3:
    node 6: call[-,v4,-] (host-environment-sources-loader)
    ->[block 4] ~>[block 25]
  block 4:
    node 7: read-variable['CSlider',v6,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:15)
    node 8: constant["vs_cntr11",v7] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:23)
    node 9: constant["lr",v8] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:36)
    node 10: constant[1.0,v9] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:42)
    ->[block 5] ~>[block 25]
  block 5:
    node 11: construct[-,v6,v7,v8,v9,v5] (test/flowgraphbuilder/flowgraph_builder0156a.js:13:11)
    ->[block 6] ~>[block 25]
  block 6:
    node 12: write-variable[v5,'cs1']* (test/flowgraphbuilder/flowgraph_builder0156a.js:13:5)
    node 13: read-variable['cs1',v11,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:1)
    node 14: read-property[v11,'startSlide',-] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:1)
    node 15: <variable-non-null-undef>['cs1'] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:1)
    node 16: constant["l",v12] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:16)
    node 17: constant["cs1",v13] (test/flowgraphbuilder/flowgraph_builder0156a.js:14:21)
    ->[block 7] ~>[block 25]
  block 7:
    node 18: call[v11,'startSlide',v12,v13,-]* (test/flowgraphbuilder/flowgraph_builder0156a.js:14:1)
    ->[block 8] ~>[block 25]
  block 8:
    node 19: read-variable['cs1',v15,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:15:1)
    node 20: constant[false,v14] (test/flowgraphbuilder/flowgraph_builder0156a.js:15:10)
    node 21: write-property[v15,'as',v14] (test/flowgraphbuilder/flowgraph_builder0156a.js:15:1)
    node 22: <variable-non-null-undef>['cs1']* (test/flowgraphbuilder/flowgraph_builder0156a.js:15:1)
    ->[block 9] ~>[block 25]
  block 9:
    node 23: nop(eventDispatchers: entry) (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 10,block 14] ~>[block 25]
  block 10:
    node 24: event-dispatcher <LOAD>* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 13] ~>[block 11]
  block 11:
    node 25: catch[v17] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    node 26: nop(eventDispatchers: exceptional exit Load) (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 12,block 14]
  block 12:
    node 27: throw[v17]* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
  block 13:
    node 28: nop(eventDispatchers: ordinary exit Load)* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 14] ~>[block 25]
  block 14:
    node 29: nop(eventDispatchers: post Load)* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 10,block 15,block 19] ~>[block 25]
  block 15:
    node 30: event-dispatcher <OTHER>* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 18] ~>[block 16]
  block 16:
    node 31: catch[v18] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    node 32: nop(eventDispatchers: exceptional exit Other) (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 17,block 19]
  block 17:
    node 33: throw[v18]* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
  block 18:
    node 34: nop(eventDispatchers: ordinary exit Other)* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 19] ~>[block 25]
  block 19:
    node 35: nop(eventDispatchers: post Other)* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 15,block 20,block 24] ~>[block 25]
  block 20:
    node 36: event-dispatcher <UNLOAD>* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 23] ~>[block 21]
  block 21:
    node 37: catch[v19] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    node 38: nop(eventDispatchers: exceptional exit Unload) (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 22,block 24]
  block 22:
    node 39: throw[v19]* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
  block 23:
    node 40: nop(eventDispatchers: ordinary exit Unload)* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 24] ~>[block 25]
  block 24:
    node 41: nop(eventDispatchers: post Unload)* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 20,block 27] ~>[block 25]
  block 25:
    node 42: catch[v16] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[block 9,block 26]
  block 26:
    node 43: throw[v16]* (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
  block 27: [exit-ordinary]
    node 44: return[v1] (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
  block 28: [exit-exceptional]
    node 45: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156a.js)
    ->[]
function CSlider(c,t,n)
  block 29: [entry]
    node 46: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:1:1)
    ->[block 30]
  block 30:
    node 47: read-variable['this',v3,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:5)
    node 48: read-variable['t',v5,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:15)
    node 49: constant["lr",v6] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:20)
    node 50: ==[v5,v6,v4] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:15)
    node 51: if[v4](true-block:31,false-block:32) (test/flowgraphbuilder/flowgraph_builder0156a.js:2:14)
    ->[block 31,block 32]
  block 31:
    node 52: constant["left",v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:28)
    ->[block 33]
  block 32:
    node 53: constant["top",v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:2:37)
    ->[block 33]
  block 33:
    node 54: write-property[v3,'p',v2]* (test/flowgraphbuilder/flowgraph_builder0156a.js:2:5)
    node 55: read-variable['this',v8,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:3:5)
    node 56: function-expr[function(d,o),v7] (test/flowgraphbuilder/flowgraph_builder0156a.js:3:23)
    node 57: write-property[v8,'startSlide',v7]* (test/flowgraphbuilder/flowgraph_builder0156a.js:3:5)
    node 58: read-variable['this',v10,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:7:5)
    node 59: function-expr[function(d),v9] (test/flowgraphbuilder/flowgraph_builder0156a.js:7:18)
    node 60: write-property[v10,'getCP',v9]* (test/flowgraphbuilder/flowgraph_builder0156a.js:7:5)
    ->[block 34]
  block 34: [exit-ordinary]
    node 61: return[v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:1:1)
    ->[]
  block 35: [exit-exceptional]
    node 62: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156a.js:1:1)
    ->[]
function(d,o)
  block 36: [entry]
    node 63: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:3:23)
    ->[block 37]
  block 37:
    node 64: read-variable['this',v4,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:9)
    node 65: read-variable['setInterval',v6,v5] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:23)
    node 66: constant["",v14] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 67: read-variable['o',v15,v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:40)
    node 68: +[v14,v15,v12] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 69: constant[".move('",v13] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:44)
    node 70: +[v12,v13,v10] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 71: read-variable['d',v11,v2] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:56)
    node 72: +[v10,v11,v8] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 73: constant["')",v9] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:60)
    node 74: +[v8,v9,v7] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:35)
    node 75: constant[10.0,v16] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:66)
    ->[block 38]
  block 38:
    node 76: call[v5,v6,v7,v16,v3] (test/flowgraphbuilder/flowgraph_builder0156a.js:4:23)
    ->[block 39]
  block 39:
    node 77: write-property[v4,'intrvl',v3]* (test/flowgraphbuilder/flowgraph_builder0156a.js:4:9)
    node 78: read-variable['this',v18,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:5:9)
    node 79: read-variable['this',v20,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:5:19)
    node 80: read-property[v20,'getCP',-] (test/flowgraphbuilder/flowgraph_builder0156a.js:5:19)
    ->[block 40]
  block 40:
    node 81: call[v20,'getCP',v17] (test/flowgraphbuilder/flowgraph_builder0156a.js:5:19)
    ->[block 41]
  block 41:
    node 82: write-property[v18,'np',v17]* (test/flowgraphbuilder/flowgraph_builder0156a.js:5:9)
    ->[block 42]
  block 42: [exit-ordinary]
    node 83: return[v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:3:23)
    ->[]
  block 43: [exit-exceptional]
    node 84: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156a.js:3:23)
    ->[]
function(d)
  block 44: [entry]
    node 85: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:7:18)
    ->[block 45]
  block 45:
    node 86: read-variable['eval',v4,v3] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:16)
    node 87: constant["parseInt(this.c.style.",v12] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    node 88: read-variable['this',v14,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:48)
    node 89: read-property[v14,'p',v13] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:48)
    node 90: +[v12,v13,v10] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    node 91: constant[".substring(0,this.c.style.",v11] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:57)
    node 92: +[v10,v11,v8] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    node 93: read-variable['this',v15,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:88)
    node 94: read-property[v15,'p',v9] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:88)
    node 95: +[v8,v9,v6] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    node 96: constant[".length-2))",v7] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:97)
    node 97: +[v6,v7,v5] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:21)
    ->[block 46]
  block 46:
    node 98: call[v3,v4,v5,v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:16)
    ->[block 47]
  block 142:
    node 427: constant[undefined,-] (test/flowgraphbuilder/flowgraph_builder0156a.js:8:16)
    ->[block 143]
  block 143:
    node 428: read-variable['parseInt',v19,v18] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:15)
    node 429: read-variable['this',v25,-] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:24)
    node 430: read-property[v25,'c',v24] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:24)
    node 431: read-property[v24,'style',v23] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:24)
    node 432: <property-non-null-undef>[v25,'c'] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:24)
    node 433: read-property[v23,'left',v22] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:24)
    node 434: <property-non-null-undef>[v24,'style'] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:24)
    node 435: read-property[v22,'substring',-] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:24)
    node 436: <property-non-null-undef>[v23,'left'] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:24)
    node 437: constant[0.0,v26] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:52)
    node 438: read-variable['this',v33,-] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:54)
    node 439: read-property[v33,'c',v32] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:54)
    node 440: read-property[v32,'style',v31] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:54)
    node 441: <property-non-null-undef>[v33,'c'] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:54)
    node 442: read-property[v31,'left',v30] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:54)
    node 443: <property-non-null-undef>[v32,'style'] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:54)
    node 444: read-property[v30,'length',v28] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:54)
    node 445: <property-non-null-undef>[v31,'left'] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:54)
    node 446: constant[2.0,v29] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:79)
    node 447: -[v28,v29,v27] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:54)
    ->[block 144]
  block 144:
    node 448: call[v22,'substring',v26,v27,v20] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:24)
    ->[block 145]
  block 145:
    node 449: call[v18,v19,v20,v1] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:15)
    ->[block 47]
  block 47: [exit-ordinary]
    node 99: return[v1] (test/flowgraphbuilder/flowgraph_builder0156a.js:7:18)
    ->[]
  block 48: [exit-exceptional]
    node 100: exceptional-return (test/flowgraphbuilder/flowgraph_builder0156a.js:7:18)
    ->[]
function()
  block 137: [entry]
    node 419: constant[undefined,v1] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1)
    ->[block 138]
  block 138:
    node 420: read-variable['cs1',v4,-] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1)
    node 421: read-property[v4,'move',-] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1)
    node 422: <variable-non-null-undef>['cs1'] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1)
    node 423: constant["l",v5] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:10)
    ->[block 139]
  block 139:
    node 424: call[v4,'move',v5,-]* (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1)
    ->[block 140]
  block 140: [exit-ordinary]
    node 425: return[v1] (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1)
    ->[]
  block 141: [exit-exceptional]
    node 426: exceptional-return (TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1)
    ->[]

TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1: [definite] TypeError, call to non-function
test/flowgraphbuilder/flowgraph_builder0156a.js:2:14: [definite] The conditional expression is always true
test/flowgraphbuilder/flowgraph_builder0156a.js:4:9: [definite] Dead assignment, property intrvl is never read
TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1: [definite] Reading absent property move
TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:24: [definite] Reading absent property c
test/flowgraphbuilder/flowgraph_builder0156a.js:1:1: [definite] The variable c is never used
test/flowgraphbuilder/flowgraph_builder0156a.js:1:1: [definite] The variable n is never used
test/flowgraphbuilder/flowgraph_builder0156a.js:5:9: [definite] Unreachable code
test/flowgraphbuilder/flowgraph_builder0156a.js:7:18: [definite] The variable d is never used
test/flowgraphbuilder/flowgraph_builder0156a.js:15:1: [definite] Unreachable code
TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:24: [definite] Unreachable code
TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:24: [maybe] TypeError, accessing property of null/undefined
test/flowgraphbuilder/flowgraph_builder0156a.js: [maybe] Uncaught exception, constructed at [TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:4:23):1:1, TAJS-dynamic-code(test/flowgraphbuilder/flowgraph_builder0156a.js:8:16):1:24]
