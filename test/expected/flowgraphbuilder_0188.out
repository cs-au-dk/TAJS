fg2: <main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0188.js)
    node 1: vardecl['x']* (test/flowgraphbuilder/flowgraph_builder0188.js:1:5)
    node 2: vardecl['y']* (test/flowgraphbuilder/flowgraph_builder0188.js:1:7)
    node 3: vardecl['z']* (test/flowgraphbuilder/flowgraph_builder0188.js:1:9)
    node 4: vardecl['r']* (test/flowgraphbuilder/flowgraph_builder0188.js:5:9)
    ->[block 1]
  block 1:
    node 5: constant["tajs-host-env:string-replace-model.js",v2] (host-environment-sources-loader)
    node 6: constant[true,v3] (host-environment-sources-loader)
    ->[block 2]
  block 2:
    node 7: call[TAJS_load,v2,v3,v4] (host-environment-sources-loader)
    ->[block 3]
  block 3:
    node 8: call[-,v4,-] (host-environment-sources-loader)
    ->[block 4]
  block 4:
    node 9: constant[0.0,v5] (test/flowgraphbuilder/flowgraph_builder0188.js:2:14)
    node 10: write-variable[v5,'x']* (test/flowgraphbuilder/flowgraph_builder0188.js:2:10)
    ->[block 5]
  block 5:
    node 11: read-variable['x',v7,-] (test/flowgraphbuilder/flowgraph_builder0188.js:2:17)
    node 12: constant[10.0,v8] (test/flowgraphbuilder/flowgraph_builder0188.js:2:21)
    node 13: <[v7,v8,v6] (test/flowgraphbuilder/flowgraph_builder0188.js:2:17)
    node 14: begin-loop[v6] (test/flowgraphbuilder/flowgraph_builder0188.js:2:30)
    ->[block 6] ~>[block 48]
  block 6:
    node 15: if[v6](true-block:7,false-block:49)* (test/flowgraphbuilder/flowgraph_builder0188.js:2:17)
    ->[block 7,block 49] ~>[block 48]
  block 7:
    node 16: constant[0.0,v9] (test/flowgraphbuilder/flowgraph_builder0188.js:3:15)
    node 17: write-variable[v9,'y']* (test/flowgraphbuilder/flowgraph_builder0188.js:3:11)
    ->[block 8] ~>[block 48]
  block 8:
    node 18: read-variable['y',v11,-] (test/flowgraphbuilder/flowgraph_builder0188.js:3:18)
    node 19: constant[10.0,v12] (test/flowgraphbuilder/flowgraph_builder0188.js:3:22)
    node 20: <[v11,v12,v10] (test/flowgraphbuilder/flowgraph_builder0188.js:3:18)
    node 21: begin-loop[v10] (test/flowgraphbuilder/flowgraph_builder0188.js:3:31)
    ->[block 9] ~>[block 45]
  block 9:
    node 22: if[v10](true-block:10,false-block:46)* (test/flowgraphbuilder/flowgraph_builder0188.js:3:18)
    ->[block 10,block 46] ~>[block 45]
  block 10:
    node 23: constant[0.0,v13] (test/flowgraphbuilder/flowgraph_builder0188.js:4:16)
    node 24: write-variable[v13,'z']* (test/flowgraphbuilder/flowgraph_builder0188.js:4:12)
    ->[block 11] ~>[block 45]
  block 11:
    node 25: read-variable['z',v15,-] (test/flowgraphbuilder/flowgraph_builder0188.js:4:19)
    node 26: constant[10.0,v16] (test/flowgraphbuilder/flowgraph_builder0188.js:4:23)
    node 27: <[v15,v16,v14] (test/flowgraphbuilder/flowgraph_builder0188.js:4:19)
    node 28: begin-loop[v14] (test/flowgraphbuilder/flowgraph_builder0188.js:4:32)
    ->[block 12] ~>[block 42]
  block 12:
    node 29: if[v14](true-block:13,false-block:43)* (test/flowgraphbuilder/flowgraph_builder0188.js:4:19)
    ->[block 13,block 43] ~>[block 42]
  block 13:
    node 30: read-variable['Math',v19,-] (test/flowgraphbuilder/flowgraph_builder0188.js:5:13)
    node 31: read-property[v19,'random',-] (test/flowgraphbuilder/flowgraph_builder0188.js:5:13)
    node 32: <variable-non-null-undef>['Math'] (test/flowgraphbuilder/flowgraph_builder0188.js:5:13)
    ->[block 14] ~>[block 42]
  block 14:
    node 33: call[v19,'random',v17] (test/flowgraphbuilder/flowgraph_builder0188.js:5:13)
    ->[block 15] ~>[block 42]
  block 15:
    node 34: write-variable[v17,'r']* (test/flowgraphbuilder/flowgraph_builder0188.js:5:9)
    node 35: read-variable['z',v21,-] (test/flowgraphbuilder/flowgraph_builder0188.js:6:8)
    node 36: constant[0.1,v22] (test/flowgraphbuilder/flowgraph_builder0188.js:6:12)
    node 37: >[v21,v22,v20] (test/flowgraphbuilder/flowgraph_builder0188.js:6:8)
    node 38: if[v20](true-block:16,false-block:20)* (test/flowgraphbuilder/flowgraph_builder0188.js:6:4)
    ->[block 16,block 20] ~>[block 42]
  block 16:
    node 39: nop(break l1)* (test/flowgraphbuilder/flowgraph_builder0188.js:7:5)
    ->[block 17] ~>[block 42]
  block 17:
    node 40(~-1): end-loop[v14]* (test/flowgraphbuilder/flowgraph_builder0188.js:4:19)
    ->[block 18] ~>[block 42]
  block 18:
    node 41(~-1): end-loop[v10]* (test/flowgraphbuilder/flowgraph_builder0188.js:3:18)
    ->[block 19] ~>[block 45]
  block 19:
    node 42(~-1): end-loop[v6]* (test/flowgraphbuilder/flowgraph_builder0188.js:2:17)
    ->[block 50] ~>[block 48]
  block 20:
    node 43: read-variable['z',v24,-] (test/flowgraphbuilder/flowgraph_builder0188.js:8:8)
    node 44: constant[0.2,v25] (test/flowgraphbuilder/flowgraph_builder0188.js:8:12)
    node 45: >[v24,v25,v23] (test/flowgraphbuilder/flowgraph_builder0188.js:8:8)
    node 46: if[v23](true-block:21,false-block:24)* (test/flowgraphbuilder/flowgraph_builder0188.js:8:4)
    ->[block 21,block 24] ~>[block 42]
  block 21:
    node 47: nop(break l2)* (test/flowgraphbuilder/flowgraph_builder0188.js:9:5)
    ->[block 22] ~>[block 42]
  block 22:
    node 48(~-1): end-loop[v14]* (test/flowgraphbuilder/flowgraph_builder0188.js:4:19)
    ->[block 23] ~>[block 42]
  block 23:
    node 49(~-1): end-loop[v10]* (test/flowgraphbuilder/flowgraph_builder0188.js:3:18)
    ->[block 47] ~>[block 45]
  block 24:
    node 50: read-variable['z',v27,-] (test/flowgraphbuilder/flowgraph_builder0188.js:10:8)
    node 51: constant[0.3,v28] (test/flowgraphbuilder/flowgraph_builder0188.js:10:12)
    node 52: >[v27,v28,v26] (test/flowgraphbuilder/flowgraph_builder0188.js:10:8)
    node 53: if[v26](true-block:25,false-block:27)* (test/flowgraphbuilder/flowgraph_builder0188.js:10:4)
    ->[block 25,block 27] ~>[block 42]
  block 25:
    node 54: nop(break l3)* (test/flowgraphbuilder/flowgraph_builder0188.js:11:5)
    ->[block 26] ~>[block 42]
  block 26:
    node 55(~-1): end-loop[v14]* (test/flowgraphbuilder/flowgraph_builder0188.js:4:19)
    ->[block 44] ~>[block 42]
  block 27:
    node 56: read-variable['z',v30,-] (test/flowgraphbuilder/flowgraph_builder0188.js:12:8)
    node 57: constant[0.4,v31] (test/flowgraphbuilder/flowgraph_builder0188.js:12:12)
    node 58: >[v30,v31,v29] (test/flowgraphbuilder/flowgraph_builder0188.js:12:8)
    node 59: if[v29](true-block:28,false-block:29)* (test/flowgraphbuilder/flowgraph_builder0188.js:12:4)
    ->[block 28,block 29] ~>[block 42]
  block 28:
    node 60: nop(break <DEFAULT>)* (test/flowgraphbuilder/flowgraph_builder0188.js:13:5)
    ->[block 43] ~>[block 42]
  block 29:
    node 61: read-variable['z',v33,-] (test/flowgraphbuilder/flowgraph_builder0188.js:14:8)
    node 62: constant[0.1,v34] (test/flowgraphbuilder/flowgraph_builder0188.js:14:12)
    node 63: >[v33,v34,v32] (test/flowgraphbuilder/flowgraph_builder0188.js:14:8)
    node 64: if[v32](true-block:30,false-block:33)* (test/flowgraphbuilder/flowgraph_builder0188.js:14:4)
    ->[block 30,block 33] ~>[block 42]
  block 30:
    node 65: nop(continue l1)* (test/flowgraphbuilder/flowgraph_builder0188.js:15:5)
    ->[block 31] ~>[block 42]
  block 31:
    node 66(~-1): end-loop[v14]* (test/flowgraphbuilder/flowgraph_builder0188.js:4:19)
    ->[block 32] ~>[block 42]
  block 32:
    node 67(~-1): end-loop[v10]* (test/flowgraphbuilder/flowgraph_builder0188.js:3:18)
    ->[block 47] ~>[block 45]
  block 33:
    node 68: read-variable['z',v36,-] (test/flowgraphbuilder/flowgraph_builder0188.js:16:8)
    node 69: constant[0.2,v37] (test/flowgraphbuilder/flowgraph_builder0188.js:16:12)
    node 70: >[v36,v37,v35] (test/flowgraphbuilder/flowgraph_builder0188.js:16:8)
    node 71: if[v35](true-block:34,false-block:36)* (test/flowgraphbuilder/flowgraph_builder0188.js:16:4)
    ->[block 34,block 36] ~>[block 42]
  block 34:
    node 72: nop(continue l2)* (test/flowgraphbuilder/flowgraph_builder0188.js:17:5)
    ->[block 35] ~>[block 42]
  block 35:
    node 73(~-1): end-loop[v14]* (test/flowgraphbuilder/flowgraph_builder0188.js:4:19)
    ->[block 44] ~>[block 42]
  block 36:
    node 74: read-variable['z',v39,-] (test/flowgraphbuilder/flowgraph_builder0188.js:18:8)
    node 75: constant[0.3,v40] (test/flowgraphbuilder/flowgraph_builder0188.js:18:12)
    node 76: >[v39,v40,v38] (test/flowgraphbuilder/flowgraph_builder0188.js:18:8)
    node 77: if[v38](true-block:37,false-block:38)* (test/flowgraphbuilder/flowgraph_builder0188.js:18:4)
    ->[block 37,block 38] ~>[block 42]
  block 37:
    node 78: nop(continue l3)* (test/flowgraphbuilder/flowgraph_builder0188.js:19:5)
    ->[block 41] ~>[block 42]
  block 38:
    node 79: read-variable['z',v42,-] (test/flowgraphbuilder/flowgraph_builder0188.js:20:8)
    node 80: constant[0.4,v43] (test/flowgraphbuilder/flowgraph_builder0188.js:20:12)
    node 81: >[v42,v43,v41] (test/flowgraphbuilder/flowgraph_builder0188.js:20:8)
    node 82: if[v41](true-block:39,false-block:40)* (test/flowgraphbuilder/flowgraph_builder0188.js:20:4)
    ->[block 39,block 40] ~>[block 42]
  block 39:
    node 83: nop(continue <DEFAULT>)* (test/flowgraphbuilder/flowgraph_builder0188.js:21:5)
    ->[block 41] ~>[block 42]
  block 40:
    node 84: constant[42.0,v44] (test/flowgraphbuilder/flowgraph_builder0188.js:22:8)
    node 85: write-variable[v44,'r']* (test/flowgraphbuilder/flowgraph_builder0188.js:22:4)
    ->[block 41] ~>[block 42]
  block 41:
    node 86: read-variable['z',v45,-] (test/flowgraphbuilder/flowgraph_builder0188.js:4:27)
    node 87: +[v45,v46] (test/flowgraphbuilder/flowgraph_builder0188.js:4:27)
    node 88: constant[1.0,v47] (test/flowgraphbuilder/flowgraph_builder0188.js:4:27)
    node 89: +[v46,v47,v48] (test/flowgraphbuilder/flowgraph_builder0188.js:4:27)
    node 90: write-variable[v48,'z']* (test/flowgraphbuilder/flowgraph_builder0188.js:4:27)
    ->[block 11] ~>[block 42]
  block 42:
    node 91: end-loop[v14]* (test/flowgraphbuilder/flowgraph_builder0188.js:4:19)
    ->[block 45]
  block 43:
    node 92: end-loop[v14]* (test/flowgraphbuilder/flowgraph_builder0188.js:4:19)
    ->[block 44] ~>[block 45]
  block 44:
    node 93: read-variable['y',v49,-] (test/flowgraphbuilder/flowgraph_builder0188.js:3:26)
    node 94: +[v49,v50] (test/flowgraphbuilder/flowgraph_builder0188.js:3:26)
    node 95: constant[1.0,v51] (test/flowgraphbuilder/flowgraph_builder0188.js:3:26)
    node 96: +[v50,v51,v52] (test/flowgraphbuilder/flowgraph_builder0188.js:3:26)
    node 97: write-variable[v52,'y']* (test/flowgraphbuilder/flowgraph_builder0188.js:3:26)
    ->[block 8] ~>[block 45]
  block 45:
    node 98: end-loop[v10]* (test/flowgraphbuilder/flowgraph_builder0188.js:3:18)
    ->[block 48]
  block 46:
    node 99: end-loop[v10]* (test/flowgraphbuilder/flowgraph_builder0188.js:3:18)
    ->[block 47] ~>[block 48]
  block 47:
    node 100: read-variable['x',v53,-] (test/flowgraphbuilder/flowgraph_builder0188.js:2:25)
    node 101: +[v53,v54] (test/flowgraphbuilder/flowgraph_builder0188.js:2:25)
    node 102: constant[1.0,v55] (test/flowgraphbuilder/flowgraph_builder0188.js:2:25)
    node 103: +[v54,v55,v56] (test/flowgraphbuilder/flowgraph_builder0188.js:2:25)
    node 104: write-variable[v56,'x']* (test/flowgraphbuilder/flowgraph_builder0188.js:2:25)
    ->[block 5] ~>[block 48]
  block 48:
    node 105: end-loop[v6]* (test/flowgraphbuilder/flowgraph_builder0188.js:2:17)
    ->[block 51]
  block 49:
    node 106: end-loop[v6]* (test/flowgraphbuilder/flowgraph_builder0188.js:2:17)
    ->[block 50]
  block 50: [exit-ordinary]
    node 107: return[v1] (test/flowgraphbuilder/flowgraph_builder0188.js)
    ->[]
  block 51: [exit-exceptional]
    node 108: exceptional-return (test/flowgraphbuilder/flowgraph_builder0188.js)
    ->[]

fg2: <main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test/flowgraphbuilder/flowgraph_builder0188.js)
    node 1: vardecl['x']* (test/flowgraphbuilder/flowgraph_builder0188.js:1:5)
    node 2: vardecl['y']* (test/flowgraphbuilder/flowgraph_builder0188.js:1:7)
    node 3: vardecl['z']* (test/flowgraphbuilder/flowgraph_builder0188.js:1:9)
    node 4: vardecl['r']* (test/flowgraphbuilder/flowgraph_builder0188.js:5:9)
    ->[block 1]
  block 1:
    node 5: constant["tajs-host-env:string-replace-model.js",v2] (host-environment-sources-loader)
    node 6: constant[true,v3] (host-environment-sources-loader)
    ->[block 2]
  block 2:
    node 7: call[TAJS_load,v2,v3,v4] (host-environment-sources-loader)
    ->[block 3]
  block 3:
    node 8: call[-,v4,-] (host-environment-sources-loader)
    ->[block 4]
  block 4:
    node 9: constant[0.0,v5] (test/flowgraphbuilder/flowgraph_builder0188.js:2:14)
    node 10: write-variable[v5,'x']* (test/flowgraphbuilder/flowgraph_builder0188.js:2:10)
    ->[block 5]
  block 5:
    node 11: read-variable['x',v7,-] (test/flowgraphbuilder/flowgraph_builder0188.js:2:17)
    node 12: constant[10.0,v8] (test/flowgraphbuilder/flowgraph_builder0188.js:2:21)
    node 13: <[v7,v8,v6] (test/flowgraphbuilder/flowgraph_builder0188.js:2:17)
    node 14: begin-loop[v6] (test/flowgraphbuilder/flowgraph_builder0188.js:2:30)
    ->[block 6] ~>[block 48]
  block 6:
    node 15: if[v6](true-block:7,false-block:49)* (test/flowgraphbuilder/flowgraph_builder0188.js:2:17)
    ->[block 7,block 49] ~>[block 48]
  block 7:
    node 16: constant[0.0,v9] (test/flowgraphbuilder/flowgraph_builder0188.js:3:15)
    node 17: write-variable[v9,'y']* (test/flowgraphbuilder/flowgraph_builder0188.js:3:11)
    ->[block 8] ~>[block 48]
  block 8:
    node 18: read-variable['y',v11,-] (test/flowgraphbuilder/flowgraph_builder0188.js:3:18)
    node 19: constant[10.0,v12] (test/flowgraphbuilder/flowgraph_builder0188.js:3:22)
    node 20: <[v11,v12,v10] (test/flowgraphbuilder/flowgraph_builder0188.js:3:18)
    node 21: begin-loop[v10] (test/flowgraphbuilder/flowgraph_builder0188.js:3:31)
    ->[block 9] ~>[block 45]
  block 9:
    node 22: if[v10](true-block:10,false-block:46)* (test/flowgraphbuilder/flowgraph_builder0188.js:3:18)
    ->[block 10,block 46] ~>[block 45]
  block 10:
    node 23: constant[0.0,v13] (test/flowgraphbuilder/flowgraph_builder0188.js:4:16)
    node 24: write-variable[v13,'z']* (test/flowgraphbuilder/flowgraph_builder0188.js:4:12)
    ->[block 11] ~>[block 45]
  block 11:
    node 25: read-variable['z',v15,-] (test/flowgraphbuilder/flowgraph_builder0188.js:4:19)
    node 26: constant[10.0,v16] (test/flowgraphbuilder/flowgraph_builder0188.js:4:23)
    node 27: <[v15,v16,v14] (test/flowgraphbuilder/flowgraph_builder0188.js:4:19)
    node 28: begin-loop[v14] (test/flowgraphbuilder/flowgraph_builder0188.js:4:32)
    ->[block 12] ~>[block 42]
  block 12:
    node 29: if[v14](true-block:13,false-block:43)* (test/flowgraphbuilder/flowgraph_builder0188.js:4:19)
    ->[block 13,block 43] ~>[block 42]
  block 13:
    node 30: read-variable['Math',v19,-] (test/flowgraphbuilder/flowgraph_builder0188.js:5:13)
    node 31: read-property[v19,'random',-] (test/flowgraphbuilder/flowgraph_builder0188.js:5:13)
    node 32: <variable-non-null-undef>['Math'] (test/flowgraphbuilder/flowgraph_builder0188.js:5:13)
    ->[block 14] ~>[block 42]
  block 14:
    node 33: call[v19,'random',v17] (test/flowgraphbuilder/flowgraph_builder0188.js:5:13)
    ->[block 15] ~>[block 42]
  block 15:
    node 34: write-variable[v17,'r']* (test/flowgraphbuilder/flowgraph_builder0188.js:5:9)
    node 35: read-variable['z',v21,-] (test/flowgraphbuilder/flowgraph_builder0188.js:6:8)
    node 36: constant[0.1,v22] (test/flowgraphbuilder/flowgraph_builder0188.js:6:12)
    node 37: >[v21,v22,v20] (test/flowgraphbuilder/flowgraph_builder0188.js:6:8)
    node 38: if[v20](true-block:16,false-block:20)* (test/flowgraphbuilder/flowgraph_builder0188.js:6:4)
    ->[block 16,block 20] ~>[block 42]
  block 16:
    node 39: nop(break l1)* (test/flowgraphbuilder/flowgraph_builder0188.js:7:5)
    ->[block 17] ~>[block 42]
  block 17:
    node 40(~-1): end-loop[v14]* (test/flowgraphbuilder/flowgraph_builder0188.js:4:19)
    ->[block 18] ~>[block 42]
  block 18:
    node 41(~-1): end-loop[v10]* (test/flowgraphbuilder/flowgraph_builder0188.js:3:18)
    ->[block 19] ~>[block 45]
  block 19:
    node 42(~-1): end-loop[v6]* (test/flowgraphbuilder/flowgraph_builder0188.js:2:17)
    ->[block 50] ~>[block 48]
  block 20:
    node 43: read-variable['z',v24,-] (test/flowgraphbuilder/flowgraph_builder0188.js:8:8)
    node 44: constant[0.2,v25] (test/flowgraphbuilder/flowgraph_builder0188.js:8:12)
    node 45: >[v24,v25,v23] (test/flowgraphbuilder/flowgraph_builder0188.js:8:8)
    node 46: if[v23](true-block:21,false-block:24)* (test/flowgraphbuilder/flowgraph_builder0188.js:8:4)
    ->[block 21,block 24] ~>[block 42]
  block 21:
    node 47: nop(break l2)* (test/flowgraphbuilder/flowgraph_builder0188.js:9:5)
    ->[block 22] ~>[block 42]
  block 22:
    node 48(~-1): end-loop[v14]* (test/flowgraphbuilder/flowgraph_builder0188.js:4:19)
    ->[block 23] ~>[block 42]
  block 23:
    node 49(~-1): end-loop[v10]* (test/flowgraphbuilder/flowgraph_builder0188.js:3:18)
    ->[block 47] ~>[block 45]
  block 24:
    node 50: read-variable['z',v27,-] (test/flowgraphbuilder/flowgraph_builder0188.js:10:8)
    node 51: constant[0.3,v28] (test/flowgraphbuilder/flowgraph_builder0188.js:10:12)
    node 52: >[v27,v28,v26] (test/flowgraphbuilder/flowgraph_builder0188.js:10:8)
    node 53: if[v26](true-block:25,false-block:27)* (test/flowgraphbuilder/flowgraph_builder0188.js:10:4)
    ->[block 25,block 27] ~>[block 42]
  block 25:
    node 54: nop(break l3)* (test/flowgraphbuilder/flowgraph_builder0188.js:11:5)
    ->[block 26] ~>[block 42]
  block 26:
    node 55(~-1): end-loop[v14]* (test/flowgraphbuilder/flowgraph_builder0188.js:4:19)
    ->[block 44] ~>[block 42]
  block 27:
    node 56: read-variable['z',v30,-] (test/flowgraphbuilder/flowgraph_builder0188.js:12:8)
    node 57: constant[0.4,v31] (test/flowgraphbuilder/flowgraph_builder0188.js:12:12)
    node 58: >[v30,v31,v29] (test/flowgraphbuilder/flowgraph_builder0188.js:12:8)
    node 59: if[v29](true-block:28,false-block:29)* (test/flowgraphbuilder/flowgraph_builder0188.js:12:4)
    ->[block 28,block 29] ~>[block 42]
  block 28:
    node 60: nop(break <DEFAULT>)* (test/flowgraphbuilder/flowgraph_builder0188.js:13:5)
    ->[block 43] ~>[block 42]
  block 29:
    node 61: read-variable['z',v33,-] (test/flowgraphbuilder/flowgraph_builder0188.js:14:8)
    node 62: constant[0.1,v34] (test/flowgraphbuilder/flowgraph_builder0188.js:14:12)
    node 63: >[v33,v34,v32] (test/flowgraphbuilder/flowgraph_builder0188.js:14:8)
    node 64: if[v32](true-block:30,false-block:33)* (test/flowgraphbuilder/flowgraph_builder0188.js:14:4)
    ->[block 30,block 33] ~>[block 42]
  block 30:
    node 65: nop(continue l1)* (test/flowgraphbuilder/flowgraph_builder0188.js:15:5)
    ->[block 31] ~>[block 42]
  block 31:
    node 66(~-1): end-loop[v14]* (test/flowgraphbuilder/flowgraph_builder0188.js:4:19)
    ->[block 32] ~>[block 42]
  block 32:
    node 67(~-1): end-loop[v10]* (test/flowgraphbuilder/flowgraph_builder0188.js:3:18)
    ->[block 47] ~>[block 45]
  block 33:
    node 68: read-variable['z',v36,-] (test/flowgraphbuilder/flowgraph_builder0188.js:16:8)
    node 69: constant[0.2,v37] (test/flowgraphbuilder/flowgraph_builder0188.js:16:12)
    node 70: >[v36,v37,v35] (test/flowgraphbuilder/flowgraph_builder0188.js:16:8)
    node 71: if[v35](true-block:34,false-block:36)* (test/flowgraphbuilder/flowgraph_builder0188.js:16:4)
    ->[block 34,block 36] ~>[block 42]
  block 34:
    node 72: nop(continue l2)* (test/flowgraphbuilder/flowgraph_builder0188.js:17:5)
    ->[block 35] ~>[block 42]
  block 35:
    node 73(~-1): end-loop[v14]* (test/flowgraphbuilder/flowgraph_builder0188.js:4:19)
    ->[block 44] ~>[block 42]
  block 36:
    node 74: read-variable['z',v39,-] (test/flowgraphbuilder/flowgraph_builder0188.js:18:8)
    node 75: constant[0.3,v40] (test/flowgraphbuilder/flowgraph_builder0188.js:18:12)
    node 76: >[v39,v40,v38] (test/flowgraphbuilder/flowgraph_builder0188.js:18:8)
    node 77: if[v38](true-block:37,false-block:38)* (test/flowgraphbuilder/flowgraph_builder0188.js:18:4)
    ->[block 37,block 38] ~>[block 42]
  block 37:
    node 78: nop(continue l3)* (test/flowgraphbuilder/flowgraph_builder0188.js:19:5)
    ->[block 41] ~>[block 42]
  block 38:
    node 79: read-variable['z',v42,-] (test/flowgraphbuilder/flowgraph_builder0188.js:20:8)
    node 80: constant[0.4,v43] (test/flowgraphbuilder/flowgraph_builder0188.js:20:12)
    node 81: >[v42,v43,v41] (test/flowgraphbuilder/flowgraph_builder0188.js:20:8)
    node 82: if[v41](true-block:39,false-block:40)* (test/flowgraphbuilder/flowgraph_builder0188.js:20:4)
    ->[block 39,block 40] ~>[block 42]
  block 39:
    node 83: nop(continue <DEFAULT>)* (test/flowgraphbuilder/flowgraph_builder0188.js:21:5)
    ->[block 41] ~>[block 42]
  block 40:
    node 84: constant[42.0,v44] (test/flowgraphbuilder/flowgraph_builder0188.js:22:8)
    node 85: write-variable[v44,'r']* (test/flowgraphbuilder/flowgraph_builder0188.js:22:4)
    ->[block 41] ~>[block 42]
  block 41:
    node 86: read-variable['z',v45,-] (test/flowgraphbuilder/flowgraph_builder0188.js:4:27)
    node 87: +[v45,v46] (test/flowgraphbuilder/flowgraph_builder0188.js:4:27)
    node 88: constant[1.0,v47] (test/flowgraphbuilder/flowgraph_builder0188.js:4:27)
    node 89: +[v46,v47,v48] (test/flowgraphbuilder/flowgraph_builder0188.js:4:27)
    node 90: write-variable[v48,'z']* (test/flowgraphbuilder/flowgraph_builder0188.js:4:27)
    ->[block 11] ~>[block 42]
  block 42:
    node 91: end-loop[v14]* (test/flowgraphbuilder/flowgraph_builder0188.js:4:19)
    ->[block 45]
  block 43:
    node 92: end-loop[v14]* (test/flowgraphbuilder/flowgraph_builder0188.js:4:19)
    ->[block 44] ~>[block 45]
  block 44:
    node 93: read-variable['y',v49,-] (test/flowgraphbuilder/flowgraph_builder0188.js:3:26)
    node 94: +[v49,v50] (test/flowgraphbuilder/flowgraph_builder0188.js:3:26)
    node 95: constant[1.0,v51] (test/flowgraphbuilder/flowgraph_builder0188.js:3:26)
    node 96: +[v50,v51,v52] (test/flowgraphbuilder/flowgraph_builder0188.js:3:26)
    node 97: write-variable[v52,'y']* (test/flowgraphbuilder/flowgraph_builder0188.js:3:26)
    ->[block 8] ~>[block 45]
  block 45:
    node 98: end-loop[v10]* (test/flowgraphbuilder/flowgraph_builder0188.js:3:18)
    ->[block 48]
  block 46:
    node 99: end-loop[v10]* (test/flowgraphbuilder/flowgraph_builder0188.js:3:18)
    ->[block 47] ~>[block 48]
  block 47:
    node 100: read-variable['x',v53,-] (test/flowgraphbuilder/flowgraph_builder0188.js:2:25)
    node 101: +[v53,v54] (test/flowgraphbuilder/flowgraph_builder0188.js:2:25)
    node 102: constant[1.0,v55] (test/flowgraphbuilder/flowgraph_builder0188.js:2:25)
    node 103: +[v54,v55,v56] (test/flowgraphbuilder/flowgraph_builder0188.js:2:25)
    node 104: write-variable[v56,'x']* (test/flowgraphbuilder/flowgraph_builder0188.js:2:25)
    ->[block 5] ~>[block 48]
  block 48:
    node 105: end-loop[v6]* (test/flowgraphbuilder/flowgraph_builder0188.js:2:17)
    ->[block 51]
  block 49:
    node 106: end-loop[v6]* (test/flowgraphbuilder/flowgraph_builder0188.js:2:17)
    ->[block 50]
  block 50: [exit-ordinary]
    node 107: return[v1] (test/flowgraphbuilder/flowgraph_builder0188.js)
    ->[]
  block 51: [exit-exceptional]
    node 108: exceptional-return (test/flowgraphbuilder/flowgraph_builder0188.js)
    ->[]
function()
  block 52: [entry]
    node 109: constant[undefined,v1] (HOST(string-replace-model.js):1:1)
    ->[block 53]
  block 53:
    node 110: read-variable['Object',v4,-] (HOST(string-replace-model.js):1:1)
    node 111: read-property[v4,'defineProperty',-] (HOST(string-replace-model.js):1:1)
    node 112: <variable-non-null-undef>['Object'] (HOST(string-replace-model.js):1:1)
    node 113: read-variable['String',v6,v2] (HOST(string-replace-model.js):1:23)
    node 114: read-property[v6,'prototype',v5] (HOST(string-replace-model.js):1:23)
    node 115: <variable-non-null-undef>['String'] (HOST(string-replace-model.js):1:23)
    node 116: constant["replace",v7] (HOST(string-replace-model.js):1:41)
    node 117: new[v8] (HOST(string-replace-model.js):1:52)
    node 118: constant[true,v9] (HOST(string-replace-model.js):2:15)
    node 119: write-property[v8,'writable',v9] (HOST(string-replace-model.js):2:5)
    node 120: constant[false,v10] (HOST(string-replace-model.js):2:33)
    node 121: write-property[v8,'enumerable',v10] (HOST(string-replace-model.js):2:21)
    node 122: constant[true,v11] (HOST(string-replace-model.js):2:54)
    node 123: write-property[v8,'configurable',v11] (HOST(string-replace-model.js):2:40)
    node 124: function-expr[function replace(searchValue,replaceValue),v12] (HOST(string-replace-model.js):3:12)
    node 125: write-property[v8,'value',v12] (HOST(string-replace-model.js):3:5)
    ->[block 54]
  block 54:
    node 126: call[v4,'defineProperty',v5,v7,v8,-]* (HOST(string-replace-model.js):1:1)
    ->[block 55]
  block 55:
    node 127: read-variable['String',v17,v2] (HOST(string-replace-model.js):69:27)
    node 128: read-property[v17,'prototype',v16] (HOST(string-replace-model.js):69:27)
    node 129: <variable-non-null-undef>['String'] (HOST(string-replace-model.js):69:27)
    node 130: read-property[v16,'replace',v15] (HOST(string-replace-model.js):69:27)
    node 131: <property-non-null-undef>[v17,'prototype'] (HOST(string-replace-model.js):69:27)
    node 132: constant[-1.0,v18] (HOST(string-replace-model.js):69:53)
    ->[block 56]
  block 56:
    node 133: call[TAJS_makeContextSensitive,v15,v18,-]* (HOST(string-replace-model.js):69:1)
    ->[block 57]
  block 57:
    node 134: read-variable['String',v23,v2] (HOST(string-replace-model.js):70:27)
    node 135: read-property[v23,'prototype',v22] (HOST(string-replace-model.js):70:27)
    node 136: <variable-non-null-undef>['String'] (HOST(string-replace-model.js):70:27)
    node 137: read-property[v22,'replace',v21] (HOST(string-replace-model.js):70:27)
    node 138: <property-non-null-undef>[v23,'prototype'] (HOST(string-replace-model.js):70:27)
    node 139: constant[0.0,v24] (HOST(string-replace-model.js):70:53)
    ->[block 58]
  block 58:
    node 140: call[TAJS_makeContextSensitive,v21,v24,-]* (HOST(string-replace-model.js):70:1)
    ->[block 59]
  block 59:
    node 141: read-variable['String',v29,v2] (HOST(string-replace-model.js):71:27)
    node 142: read-property[v29,'prototype',v28] (HOST(string-replace-model.js):71:27)
    node 143: <variable-non-null-undef>['String'] (HOST(string-replace-model.js):71:27)
    node 144: read-property[v28,'replace',v27] (HOST(string-replace-model.js):71:27)
    node 145: <property-non-null-undef>[v29,'prototype'] (HOST(string-replace-model.js):71:27)
    node 146: constant[1.0,v30] (HOST(string-replace-model.js):71:53)
    ->[block 60]
  block 60:
    node 147: call[TAJS_makeContextSensitive,v27,v30,-]* (HOST(string-replace-model.js):71:1)
    ->[block 61]
  block 61: [exit-ordinary]
    node 148: return[v1] (HOST(string-replace-model.js):1:1)
    ->[]
  block 62: [exit-exceptional]
    node 149: exceptional-return (HOST(string-replace-model.js):1:1)
    ->[]
function replace(searchValue,replaceValue)
  block 63: [entry]
    node 150: constant[undefined,v1] (HOST(string-replace-model.js):3:12)
    node 151: vardecl['receiver']* (HOST(string-replace-model.js):8:13)
    node 152: vardecl['string']* (HOST(string-replace-model.js):10:13)
    node 153: vardecl['searchValueIsRegExp']* (HOST(string-replace-model.js):16:13)
    node 154: vardecl['matches']* (HOST(string-replace-model.js):18:13)
    node 155: vardecl['matchThatIsFound']* (HOST(string-replace-model.js):21:17)
    node 156: vardecl['callbackArguments']* (HOST(string-replace-model.js):25:25)
    node 157: vardecl['i']* (HOST(string-replace-model.js):26:30)
    node 158: vardecl['indexMatch']* (HOST(string-replace-model.js):37:17)
    node 159: vardecl['replacementSubstrings']* (HOST(string-replace-model.js):45:13)
    node 160: vardecl['j']* (HOST(string-replace-model.js):47:18)
    node 161: vardecl['matchToUse']* (HOST(string-replace-model.js):48:17)
    node 162: vardecl['startIndex']* (HOST(string-replace-model.js):49:17)
    node 163: vardecl['endIndex']* (HOST(string-replace-model.js):50:17)
    node 164: vardecl['replacementSubstring']* (HOST(string-replace-model.js):51:17)
    node 165: vardecl['replacement']* (HOST(string-replace-model.js):52:17)
    node 166: vardecl['k']* (HOST(string-replace-model.js):59:18)
    node 167: vardecl['prefix']* (HOST(string-replace-model.js):61:17)
    node 168: vardecl['suffix']* (HOST(string-replace-model.js):62:17)
    node 169: vardecl['result']* (HOST(string-replace-model.js):63:17)
    ->[block 64]
  block 64:
    node 170: read-variable['this',v4,-] (HOST(string-replace-model.js):5:13)
    node 171: constant[null,v5] (HOST(string-replace-model.js):5:22)
    node 172: ===[v4,v5,v3] (HOST(string-replace-model.js):5:13)
    ->[block 65]
  block 65:
    node 173: if[v3](true-block:67,false-block:66) (HOST(string-replace-model.js):5:13)
    ->[block 66,block 67]
  block 66:
    node 174: read-variable['this',v6,-] (HOST(string-replace-model.js):5:30)
    node 175: read-variable['undefined',v7,v2] (HOST(string-replace-model.js):5:39)
    node 176: ===[v6,v7,v3] (HOST(string-replace-model.js):5:30)
    node 177: if[v3](true-block:67,false-block:70)* (HOST(string-replace-model.js):5:9)
    ->[block 67,block 70]
  block 67:
    node 178: read-variable['TypeError',v9,-] (HOST(string-replace-model.js):6:23)
    ->[block 68]
  block 68:
    node 179: construct[-,v9,v8] (HOST(string-replace-model.js):6:19)
    ->[block 69]
  block 69:
    node 180: throw[v8]* (HOST(string-replace-model.js):6:13)
    ->[block 70]
  block 70:
    node 181: read-variable['this',v8,-] (HOST(string-replace-model.js):8:24)
    node 182: write-variable[v8,'receiver']* (HOST(string-replace-model.js):8:13)
    node 183: read-variable['receiver',v10,v2] (HOST(string-replace-model.js):10:22)
    node 184: constant["",v11] (HOST(string-replace-model.js):10:33)
    node 185: +[v10,v11,v9] (HOST(string-replace-model.js):10:22)
    node 186: write-variable[v9,'string']* (HOST(string-replace-model.js):10:13)
    node 187: typeof['replaceValue',v13] (HOST(string-replace-model.js):11:13)
    node 188: constant["function",v14] (HOST(string-replace-model.js):11:37)
    node 189: !==[v13,v14,v12] (HOST(string-replace-model.js):11:13)
    node 190: if[v12](true-block:71,false-block:73)* (HOST(string-replace-model.js):11:9)
    ->[block 71,block 73]
  block 71:
    node 191: read-variable['string',v17,v2] (HOST(string-replace-model.js):13:49)
    node 192: read-variable['searchValue',v18,v2] (HOST(string-replace-model.js):13:57)
    node 193: read-variable['replaceValue',v20,v2] (HOST(string-replace-model.js):13:70)
    node 194: constant["",v21] (HOST(string-replace-model.js):13:85)
    node 195: +[v20,v21,v19] (HOST(string-replace-model.js):13:70)
    ->[block 72]
  block 72:
    node 196: call[TAJS_firstOrderStringReplace,v17,v18,v19,v1] (HOST(string-replace-model.js):13:20)
    ->[block 138]
  block 73:
    node 197: read-variable['searchValue',v16,v2] (HOST(string-replace-model.js):16:35)
    node 198: read-variable['RegExp',v17,v2] (HOST(string-replace-model.js):16:58)
    node 199: instanceof[v16,v17,v15] (HOST(string-replace-model.js):16:35)
    node 200: write-variable[v15,'searchValueIsRegExp']* (HOST(string-replace-model.js):16:13)
    ->[block 74]
  block 74:
    node 201: call[TAJS_newArray,v18] (HOST(string-replace-model.js):18:23)
    ->[block 75]
  block 75:
    node 202: write-variable[v18,'matches']* (HOST(string-replace-model.js):18:13)
    node 203: read-variable['searchValueIsRegExp',v21,v2] (HOST(string-replace-model.js):19:13)
    node 204: if[v21](true-block:87,false-block:76)* (HOST(string-replace-model.js):19:9)
    ->[block 76,block 87]
  block 76:
    node 205: read-variable['searchValue',v23,v2] (HOST(string-replace-model.js):35:27)
    node 206: constant["",v24] (HOST(string-replace-model.js):35:41)
    node 207: +[v23,v24,v22] (HOST(string-replace-model.js):35:27)
    node 208: write-variable[v22,'searchValue']* (HOST(string-replace-model.js):35:13)
    ->[block 77]
  block 77:
    node 209: call[TAJS_newArray,v25] (HOST(string-replace-model.js):36:37)
    ->[block 78]
  block 78:
    node 210: write-variable[v25,'callbackArguments']* (HOST(string-replace-model.js):36:17)
    node 211: read-variable['string',v30,-] (HOST(string-replace-model.js):37:30)
    node 212: read-property[v30,'indexOf',-] (HOST(string-replace-model.js):37:30)
    node 213: <variable-non-null-undef>['string'] (HOST(string-replace-model.js):37:30)
    node 214: read-variable['searchValue',v31,v2] (HOST(string-replace-model.js):37:45)
    ->[block 79]
  block 79:
    node 215: call[v30,'indexOf',v31,v28] (HOST(string-replace-model.js):37:30)
    ->[block 80]
  block 80:
    node 216: write-variable[v28,'indexMatch']* (HOST(string-replace-model.js):37:17)
    node 217: read-variable['indexMatch',v33,v2] (HOST(string-replace-model.js):38:17)
    node 218: constant[-1.0,v34] (HOST(string-replace-model.js):38:32)
    node 219: !==[v33,v34,v32] (HOST(string-replace-model.js):38:17)
    node 220: if[v32](true-block:81,false-block:112)* (HOST(string-replace-model.js):38:13)
    ->[block 81,block 112]
  block 81:
    node 221: read-variable['callbackArguments',v36,v2] (HOST(string-replace-model.js):39:17)
    node 222: constant[0.0,v37] (HOST(string-replace-model.js):39:35)
    node 223: read-variable['searchValue',v35,v2] (HOST(string-replace-model.js):39:40)
    node 224: write-property[v36,v37,v35] (HOST(string-replace-model.js):39:17)
    node 225: <variable-non-null-undef>['callbackArguments']* (HOST(string-replace-model.js):39:17)
    node 226: read-variable['callbackArguments',v39,-] (HOST(string-replace-model.js):40:17)
    node 227: read-property[v39,'push',-] (HOST(string-replace-model.js):40:17)
    node 228: <variable-non-null-undef>['callbackArguments'] (HOST(string-replace-model.js):40:17)
    node 229: read-variable['indexMatch',v40,v2] (HOST(string-replace-model.js):40:40)
    ->[block 82]
  block 82:
    node 230: call[v39,'push',v40,-]* (HOST(string-replace-model.js):40:17)
    ->[block 83]
  block 83:
    node 231: read-variable['callbackArguments',v42,-] (HOST(string-replace-model.js):41:17)
    node 232: read-property[v42,'push',-] (HOST(string-replace-model.js):41:17)
    node 233: <variable-non-null-undef>['callbackArguments'] (HOST(string-replace-model.js):41:17)
    node 234: read-variable['string',v43,v2] (HOST(string-replace-model.js):41:40)
    ->[block 84]
  block 84:
    node 235: call[v42,'push',v43,-]* (HOST(string-replace-model.js):41:17)
    ->[block 85]
  block 85:
    node 236: read-variable['matches',v45,-] (HOST(string-replace-model.js):42:17)
    node 237: read-property[v45,'push',-] (HOST(string-replace-model.js):42:17)
    node 238: <variable-non-null-undef>['matches'] (HOST(string-replace-model.js):42:17)
    node 239: read-variable['callbackArguments',v46,v2] (HOST(string-replace-model.js):42:30)
    ->[block 86]
  block 86:
    node 240: call[v45,'push',v46,-]* (HOST(string-replace-model.js):42:17)
    ->[block 112]
  block 87:
    node 241: read-variable['searchValue',v28,-] (HOST(string-replace-model.js):23:36)
    node 242: read-property[v28,'exec',-] (HOST(string-replace-model.js):23:36)
    node 243: <variable-non-null-undef>['searchValue'] (HOST(string-replace-model.js):23:36)
    node 244: read-variable['string',v29,v2] (HOST(string-replace-model.js):23:53)
    ->[block 88] ~>[block 110]
  block 88:
    node 245: call[v28,'exec',v29,v26] (HOST(string-replace-model.js):23:36)
    ->[block 89] ~>[block 110]
  block 89:
    node 246: write-variable[v26,'matchThatIsFound']* (HOST(string-replace-model.js):23:17)
    node 247: read-variable['matchThatIsFound',v31,v2] (HOST(string-replace-model.js):24:21)
    node 248: constant[null,v32] (HOST(string-replace-model.js):24:42)
    node 249: !==[v31,v32,v30] (HOST(string-replace-model.js):24:21)
    node 250: if[v30](true-block:90,false-block:105)* (HOST(string-replace-model.js):24:17)
    ->[block 90,block 105] ~>[block 110]
  block 90:
    node 251: call[TAJS_newArray,v33] (HOST(string-replace-model.js):25:45)
    ->[block 91] ~>[block 110]
  block 91:
    node 252: write-variable[v33,'callbackArguments']* (HOST(string-replace-model.js):25:25)
    ->[block 92] ~>[block 110]
  block 92:
    node 253: constant[0.0,v36] (HOST(string-replace-model.js):26:34)
    node 254: write-variable[v36,'i']* (HOST(string-replace-model.js):26:30)
    ->[block 93] ~>[block 110]
  block 93:
    node 255: read-variable['i',v38,v2] (HOST(string-replace-model.js):26:37)
    node 256: read-variable['matchThatIsFound',v40,v2] (HOST(string-replace-model.js):26:41)
    node 257: read-property[v40,'length',v39] (HOST(string-replace-model.js):26:41)
    node 258: <variable-non-null-undef>['matchThatIsFound'] (HOST(string-replace-model.js):26:41)
    node 259: <[v38,v39,v37] (HOST(string-replace-model.js):26:37)
    node 260: begin-loop[v37] (HOST(string-replace-model.js):26:71)
    ->[block 94] ~>[block 97]
  block 94:
    node 261: if[v37](true-block:95,false-block:98)* (HOST(string-replace-model.js):26:37)
    ->[block 95,block 98] ~>[block 97]
  block 95:
    node 262: read-variable['callbackArguments',v42,v2] (HOST(string-replace-model.js):27:25)
    node 263: read-variable['i',v43,v2] (HOST(string-replace-model.js):27:43)
    node 264: read-variable['matchThatIsFound',v44,v2] (HOST(string-replace-model.js):27:48)
    node 265: read-variable['i',v45,v2] (HOST(string-replace-model.js):27:65)
    node 266: read-property[v44,v45,v41] (HOST(string-replace-model.js):27:48)
    node 267: <variable-non-null-undef>['matchThatIsFound'] (HOST(string-replace-model.js):27:48)
    node 268: write-property[v42,v43,v41] (HOST(string-replace-model.js):27:25)
    node 269: <variable-non-null-undef>['callbackArguments']* (HOST(string-replace-model.js):27:25)
    ->[block 96] ~>[block 97]
  block 96:
    node 270: read-variable['i',v46,v2] (HOST(string-replace-model.js):26:66)
    node 271: +[v46,v47] (HOST(string-replace-model.js):26:66)
    node 272: constant[1.0,v48] (HOST(string-replace-model.js):26:66)
    node 273: +[v47,v48,v49] (HOST(string-replace-model.js):26:66)
    node 274: write-variable[v49,'i']* (HOST(string-replace-model.js):26:66)
    ->[block 93] ~>[block 97]
  block 97:
    node 275: end-loop[v37]* (HOST(string-replace-model.js):26:37)
    ->[block 110]
  block 98:
    node 276: end-loop[v37]* (HOST(string-replace-model.js):26:37)
    ->[block 99] ~>[block 110]
  block 99:
    node 277: read-variable['callbackArguments',v51,-] (HOST(string-replace-model.js):29:21)
    node 278: read-property[v51,'push',-] (HOST(string-replace-model.js):29:21)
    node 279: <variable-non-null-undef>['callbackArguments'] (HOST(string-replace-model.js):29:21)
    node 280: read-variable['matchThatIsFound',v53,v2] (HOST(string-replace-model.js):29:44)
    node 281: read-property[v53,'index',v52] (HOST(string-replace-model.js):29:44)
    node 282: <variable-non-null-undef>['matchThatIsFound'] (HOST(string-replace-model.js):29:44)
    ->[block 100] ~>[block 110]
  block 100:
    node 283: call[v51,'push',v52,-]* (HOST(string-replace-model.js):29:21)
    ->[block 101] ~>[block 110]
  block 101:
    node 284: read-variable['callbackArguments',v55,-] (HOST(string-replace-model.js):30:21)
    node 285: read-property[v55,'push',-] (HOST(string-replace-model.js):30:21)
    node 286: <variable-non-null-undef>['callbackArguments'] (HOST(string-replace-model.js):30:21)
    node 287: read-variable['matchThatIsFound',v57,v2] (HOST(string-replace-model.js):30:44)
    node 288: read-property[v57,'input',v56] (HOST(string-replace-model.js):30:44)
    node 289: <variable-non-null-undef>['matchThatIsFound'] (HOST(string-replace-model.js):30:44)
    ->[block 102] ~>[block 110]
  block 102:
    node 290: call[v55,'push',v56,-]* (HOST(string-replace-model.js):30:21)
    ->[block 103] ~>[block 110]
  block 103:
    node 291: read-variable['matches',v59,-] (HOST(string-replace-model.js):31:21)
    node 292: read-property[v59,'push',-] (HOST(string-replace-model.js):31:21)
    node 293: <variable-non-null-undef>['matches'] (HOST(string-replace-model.js):31:21)
    node 294: read-variable['callbackArguments',v60,v2] (HOST(string-replace-model.js):31:34)
    ->[block 104] ~>[block 110]
  block 104:
    node 295: call[v59,'push',v60,-]* (HOST(string-replace-model.js):31:21)
    ->[block 105] ~>[block 110]
  block 105:
    node 296: read-variable['matchThatIsFound',v23,v2] (HOST(string-replace-model.js):33:22)
    node 297: constant[null,v24] (HOST(string-replace-model.js):33:43)
    node 298: !==[v23,v24,v22] (HOST(string-replace-model.js):33:22)
    ->[block 106] ~>[block 110]
  block 106:
    node 299: if[v22](true-block:107,false-block:108) (HOST(string-replace-model.js):33:22)
    ->[block 107,block 108] ~>[block 110]
  block 107:
    node 300: read-variable['searchValue',v25,v2] (HOST(string-replace-model.js):33:51)
    node 301: read-property[v25,'global',v22] (HOST(string-replace-model.js):33:51)
    node 302: <variable-non-null-undef>['searchValue'] (HOST(string-replace-model.js):33:51)
    ->[block 108] ~>[block 110]
  block 108:
    node 303: begin-loop[v22] (HOST(string-replace-model.js):22:16)
    ->[block 109] ~>[block 110]
  block 109:
    node 304: if[v22](true-block:87,false-block:111)* (HOST(string-replace-model.js):33:22)
    ->[block 87,block 111] ~>[block 110]
  block 110:
    node 305: end-loop[v22]* (HOST(string-replace-model.js):33:22)
    ->[block 139]
  block 111:
    node 306: end-loop[v22]* (HOST(string-replace-model.js):33:22)
    ->[block 112]
  block 112:
    node 307: call[TAJS_newArray,v22] (HOST(string-replace-model.js):45:37)
    ->[block 113]
  block 113:
    node 308: write-variable[v22,'replacementSubstrings']* (HOST(string-replace-model.js):45:13)
    ->[block 114]
  block 114:
    node 309: constant[0.0,v25] (HOST(string-replace-model.js):47:22)
    node 310: write-variable[v25,'j']* (HOST(string-replace-model.js):47:18)
    ->[block 115]
  block 115:
    node 311: read-variable['j',v27,v2] (HOST(string-replace-model.js):47:25)
    node 312: read-variable['matches',v29,v2] (HOST(string-replace-model.js):47:29)
    node 313: read-property[v29,'length',v28] (HOST(string-replace-model.js):47:29)
    node 314: <variable-non-null-undef>['matches'] (HOST(string-replace-model.js):47:29)
    node 315: <[v27,v28,v26] (HOST(string-replace-model.js):47:25)
    node 316: begin-loop[v26] (HOST(string-replace-model.js):47:50)
    ->[block 116] ~>[block 124]
  block 116:
    node 317: if[v26](true-block:117,false-block:125)* (HOST(string-replace-model.js):47:25)
    ->[block 117,block 125] ~>[block 124]
  block 117:
    node 318: read-variable['matches',v31,v2] (HOST(string-replace-model.js):48:30)
    node 319: read-variable['j',v32,v2] (HOST(string-replace-model.js):48:38)
    node 320: read-property[v31,v32,v30] (HOST(string-replace-model.js):48:30)
    node 321: <variable-non-null-undef>['matches'] (HOST(string-replace-model.js):48:30)
    node 322: write-variable[v30,'matchToUse']* (HOST(string-replace-model.js):48:17)
    node 323: read-variable['matchToUse',v34,v2] (HOST(string-replace-model.js):49:30)
    node 324: read-variable['matchToUse',v38,v2] (HOST(string-replace-model.js):49:41)
    node 325: read-property[v38,'length',v36] (HOST(string-replace-model.js):49:41)
    node 326: <variable-non-null-undef>['matchToUse'] (HOST(string-replace-model.js):49:41)
    node 327: constant[2.0,v37] (HOST(string-replace-model.js):49:61)
    node 328: -[v36,v37,v35] (HOST(string-replace-model.js):49:41)
    node 329: read-property[v34,v35,v33] (HOST(string-replace-model.js):49:30)
    node 330: <variable-non-null-undef>['matchToUse'] (HOST(string-replace-model.js):49:30)
    node 331: write-variable[v33,'startIndex']* (HOST(string-replace-model.js):49:17)
    node 332: read-variable['startIndex',v40,v2] (HOST(string-replace-model.js):50:28)
    node 333: read-variable['matchToUse',v43,v2] (HOST(string-replace-model.js):50:41)
    node 334: constant[0.0,v44] (HOST(string-replace-model.js):50:52)
    node 335: read-property[v43,v44,v42] (HOST(string-replace-model.js):50:41)
    node 336: <variable-non-null-undef>['matchToUse'] (HOST(string-replace-model.js):50:41)
    node 337: read-property[v42,'length',v41] (HOST(string-replace-model.js):50:41)
    node 338: <property-non-null-undef>[v43,v44] (HOST(string-replace-model.js):50:41)
    node 339: +[v40,v41,v39] (HOST(string-replace-model.js):50:28)
    node 340: write-variable[v39,'endIndex']* (HOST(string-replace-model.js):50:17)
    node 341: read-variable['replaceValue',v49,-] (HOST(string-replace-model.js):51:40)
    node 342: read-property[v49,'apply',-] (HOST(string-replace-model.js):51:40)
    node 343: <variable-non-null-undef>['replaceValue'] (HOST(string-replace-model.js):51:40)
    node 344: read-variable['undefined',v50,v2] (HOST(string-replace-model.js):51:59)
    node 345: read-variable['matchToUse',v51,v2] (HOST(string-replace-model.js):51:70)
    ->[block 118] ~>[block 124]
  block 118:
    node 346: call[v49,'apply',v50,v51,v46] (HOST(string-replace-model.js):51:40)
    ->[block 119] ~>[block 124]
  block 119:
    node 347: constant["",v47] (HOST(string-replace-model.js):51:84)
    node 348: +[v46,v47,v45] (HOST(string-replace-model.js):51:40)
    node 349: write-variable[v45,'replacementSubstring']* (HOST(string-replace-model.js):51:17)
    ->[block 120] ~>[block 124]
  block 120:
    node 350: call[TAJS_newObject,v52] (HOST(string-replace-model.js):52:31)
    ->[block 121] ~>[block 124]
  block 121:
    node 351: write-variable[v52,'replacement']* (HOST(string-replace-model.js):52:17)
    node 352: read-variable['replacement',v56,v2] (HOST(string-replace-model.js):53:13)
    node 353: read-variable['startIndex',v55,v2] (HOST(string-replace-model.js):53:38)
    node 354: write-property[v56,'startIndex',v55] (HOST(string-replace-model.js):53:13)
    node 355: <variable-non-null-undef>['replacement']* (HOST(string-replace-model.js):53:13)
    node 356: read-variable['replacement',v58,v2] (HOST(string-replace-model.js):54:13)
    node 357: read-variable['replacementSubstring',v57,v2] (HOST(string-replace-model.js):54:37)
    node 358: write-property[v58,'substring',v57] (HOST(string-replace-model.js):54:13)
    node 359: <variable-non-null-undef>['replacement']* (HOST(string-replace-model.js):54:13)
    node 360: read-variable['replacement',v60,v2] (HOST(string-replace-model.js):55:13)
    node 361: read-variable['endIndex',v59,v2] (HOST(string-replace-model.js):55:36)
    node 362: write-property[v60,'endIndex',v59] (HOST(string-replace-model.js):55:13)
    node 363: <variable-non-null-undef>['replacement']* (HOST(string-replace-model.js):55:13)
    node 364: read-variable['replacementSubstrings',v62,-] (HOST(string-replace-model.js):56:13)
    node 365: read-property[v62,'unshift',-] (HOST(string-replace-model.js):56:13)
    node 366: <variable-non-null-undef>['replacementSubstrings'] (HOST(string-replace-model.js):56:13)
    node 367: read-variable['replacement',v63,v2] (HOST(string-replace-model.js):56:43)
    ->[block 122] ~>[block 124]
  block 122:
    node 368: call[v62,'unshift',v63,-]* (HOST(string-replace-model.js):56:13)
    ->[block 123] ~>[block 124]
  block 123:
    node 369: read-variable['j',v64,v2] (HOST(string-replace-model.js):47:45)
    node 370: +[v64,v65] (HOST(string-replace-model.js):47:45)
    node 371: constant[1.0,v66] (HOST(string-replace-model.js):47:45)
    node 372: +[v65,v66,v67] (HOST(string-replace-model.js):47:45)
    node 373: write-variable[v67,'j']* (HOST(string-replace-model.js):47:45)
    ->[block 115] ~>[block 124]
  block 124:
    node 374: end-loop[v26]* (HOST(string-replace-model.js):47:25)
    ->[block 139]
  block 125:
    node 375: end-loop[v26]* (HOST(string-replace-model.js):47:25)
    ->[block 126]
  block 126:
    node 376: constant[0.0,v68] (HOST(string-replace-model.js):59:22)
    node 377: write-variable[v68,'k']* (HOST(string-replace-model.js):59:18)
    ->[block 127]
  block 127:
    node 378: read-variable['k',v70,v2] (HOST(string-replace-model.js):59:25)
    node 379: read-variable['replacementSubstrings',v72,v2] (HOST(string-replace-model.js):59:29)
    node 380: read-property[v72,'length',v71] (HOST(string-replace-model.js):59:29)
    node 381: <variable-non-null-undef>['replacementSubstrings'] (HOST(string-replace-model.js):59:29)
    node 382: <[v70,v71,v69] (HOST(string-replace-model.js):59:25)
    node 383: begin-loop[v69] (HOST(string-replace-model.js):59:64)
    ->[block 128] ~>[block 135]
  block 128:
    node 384: if[v69](true-block:129,false-block:136)* (HOST(string-replace-model.js):59:25)
    ->[block 129,block 136] ~>[block 135]
  block 129:
    node 385: read-variable['replacementSubstrings',v74,v2] (HOST(string-replace-model.js):60:31)
    node 386: read-variable['k',v75,v2] (HOST(string-replace-model.js):60:53)
    node 387: read-property[v74,v75,v73] (HOST(string-replace-model.js):60:31)
    node 388: <variable-non-null-undef>['replacementSubstrings'] (HOST(string-replace-model.js):60:31)
    node 389: write-variable[v73,'replacement']* (HOST(string-replace-model.js):60:17)
    node 390: read-variable['string',v78,-] (HOST(string-replace-model.js):61:26)
    node 391: read-property[v78,'substring',-] (HOST(string-replace-model.js):61:26)
    node 392: <variable-non-null-undef>['string'] (HOST(string-replace-model.js):61:26)
    node 393: constant[0.0,v79] (HOST(string-replace-model.js):61:43)
    node 394: read-variable['replacement',v81,v2] (HOST(string-replace-model.js):61:46)
    node 395: read-property[v81,'startIndex',v80] (HOST(string-replace-model.js):61:46)
    node 396: <variable-non-null-undef>['replacement'] (HOST(string-replace-model.js):61:46)
    ->[block 130] ~>[block 135]
  block 130:
    node 397: call[v78,'substring',v79,v80,v76] (HOST(string-replace-model.js):61:26)
    ->[block 131] ~>[block 135]
  block 131:
    node 398: write-variable[v76,'prefix']* (HOST(string-replace-model.js):61:17)
    node 399: read-variable['string',v84,-] (HOST(string-replace-model.js):62:26)
    node 400: read-property[v84,'substring',-] (HOST(string-replace-model.js):62:26)
    node 401: <variable-non-null-undef>['string'] (HOST(string-replace-model.js):62:26)
    node 402: read-variable['replacement',v86,v2] (HOST(string-replace-model.js):62:43)
    node 403: read-property[v86,'endIndex',v85] (HOST(string-replace-model.js):62:43)
    node 404: <variable-non-null-undef>['replacement'] (HOST(string-replace-model.js):62:43)
    ->[block 132] ~>[block 135]
  block 132:
    node 405: call[v84,'substring',v85,v82] (HOST(string-replace-model.js):62:26)
    ->[block 133] ~>[block 135]
  block 133:
    node 406: write-variable[v82,'suffix']* (HOST(string-replace-model.js):62:17)
    node 407: read-variable['prefix',v90,v2] (HOST(string-replace-model.js):63:26)
    node 408: read-variable['replacement',v92,v2] (HOST(string-replace-model.js):63:35)
    node 409: read-property[v92,'substring',v91] (HOST(string-replace-model.js):63:35)
    node 410: <variable-non-null-undef>['replacement'] (HOST(string-replace-model.js):63:35)
    node 411: +[v90,v91,v88] (HOST(string-replace-model.js):63:26)
    node 412: read-variable['suffix',v89,v2] (HOST(string-replace-model.js):63:59)
    node 413: +[v88,v89,v87] (HOST(string-replace-model.js):63:26)
    node 414: write-variable[v87,'result']* (HOST(string-replace-model.js):63:17)
    node 415: read-variable['result',v93,v2] (HOST(string-replace-model.js):64:22)
    node 416: write-variable[v93,'string']* (HOST(string-replace-model.js):64:13)
    ->[block 134] ~>[block 135]
  block 134:
    node 417: read-variable['k',v94,v2] (HOST(string-replace-model.js):59:59)
    node 418: +[v94,v95] (HOST(string-replace-model.js):59:59)
    node 419: constant[1.0,v96] (HOST(string-replace-model.js):59:59)
    node 420: +[v95,v96,v97] (HOST(string-replace-model.js):59:59)
    node 421: write-variable[v97,'k']* (HOST(string-replace-model.js):59:59)
    ->[block 127] ~>[block 135]
  block 135:
    node 422: end-loop[v69]* (HOST(string-replace-model.js):59:25)
    ->[block 139]
  block 136:
    node 423: end-loop[v69]* (HOST(string-replace-model.js):59:25)
    ->[block 137]
  block 137:
    node 424: read-variable['string',v1,v2]* (HOST(string-replace-model.js):66:16)
    ->[block 138]
  block 138: [exit-ordinary]
    node 425: return[v1] (HOST(string-replace-model.js):3:12)
    ->[]
  block 139: [exit-exceptional]
    node 426: exceptional-return (HOST(string-replace-model.js):3:12)
    ->[]

test/flowgraphbuilder/flowgraph_builder0188.js: [definite] Exceptional program exit is unreachable
test/flowgraphbuilder/flowgraph_builder0188.js:5:9: [definite] The variable r is never used
